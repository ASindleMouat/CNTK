CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/debug/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.cntk currentDirectory=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData RunDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu DataDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config OutputDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu DeviceId=0 timestamping=true train=[SGD=[maxEpochs=3]] imageLayout="cudnn"
-------------------------------------------------------------------
Build info: 

		Built time: Jul 12 2016 13:55:00
		Last modified date: Tue Jul 12 04:28:35 2016
		Build type: debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
		Built by philly on 2bc22072e267
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData
07/12/2016 15:03:28: -------------------------------------------------------------------
07/12/2016 15:03:28: Build info: 

07/12/2016 15:03:28: 		Built time: Jul 12 2016 13:55:00
07/12/2016 15:03:28: 		Last modified date: Tue Jul 12 04:28:35 2016
07/12/2016 15:03:28: 		Build type: debug
07/12/2016 15:03:28: 		Build target: GPU
07/12/2016 15:03:28: 		With 1bit-SGD: no
07/12/2016 15:03:28: 		Math lib: mkl
07/12/2016 15:03:28: 		CUDA_PATH: /usr/local/cuda-7.5
07/12/2016 15:03:28: 		CUB_PATH: /usr/local/cub-1.4.1
07/12/2016 15:03:28: 		CUDNN_PATH: /usr/local/cudnn-4.0
07/12/2016 15:03:28: 		Build Branch: HEAD
07/12/2016 15:03:28: 		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
07/12/2016 15:03:28: 		Built by philly on 2bc22072e267
07/12/2016 15:03:28: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
07/12/2016 15:03:28: -------------------------------------------------------------------
07/12/2016 15:03:29: -------------------------------------------------------------------
07/12/2016 15:03:29: GPU info:

07/12/2016 15:03:29: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/12/2016 15:03:29: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/12/2016 15:03:29: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/12/2016 15:03:29: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/12/2016 15:03:29: -------------------------------------------------------------------

07/12/2016 15:03:29: Running on localhost at 2016/07/12 15:03:29
07/12/2016 15:03:29: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/debug/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.cntk  currentDirectory=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData  RunDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu  DataDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config  OutputDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu  DeviceId=0  timestamping=true  train=[SGD=[maxEpochs=3]]  imageLayout="cudnn"



07/12/2016 15:03:29: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/12/2016 15:03:29: rootDir = ".."
configDir = "$rootDir$/Config"
dataDir   = "$rootDir$/Data"
outputDir = "$rootDir$/Output"
modelDir  = "$outputDir$/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "$modelDir$/01_OneHidden"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "$configDir$/Macros.ndl"
        networkDescription = "$ConfigDir$/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData
RunDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu
DataDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

07/12/2016 15:03:29: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/12/2016 15:03:29: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/12/2016 15:03:29: rootDir = ".."
configDir = "../Config"
dataDir   = "../Data"
outputDir = "../Output"
modelDir  = "/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models/01_OneHidden"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData
RunDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu
DataDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

07/12/2016 15:03:29: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/12/2016 15:03:29: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 01_OneHidden.cntk:command=train:test
configparameters: 01_OneHidden.cntk:configDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
configparameters: 01_OneHidden.cntk:currentDirectory=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData
configparameters: 01_OneHidden.cntk:dataDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData
configparameters: 01_OneHidden.cntk:deviceId=0
configparameters: 01_OneHidden.cntk:imageLayout=cudnn
configparameters: 01_OneHidden.cntk:modelDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models
configparameters: 01_OneHidden.cntk:modelPath=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models/01_OneHidden
configparameters: 01_OneHidden.cntk:numMBsToShowResult=500
configparameters: 01_OneHidden.cntk:outputDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu
configparameters: 01_OneHidden.cntk:precision=float
configparameters: 01_OneHidden.cntk:rootDir=..
configparameters: 01_OneHidden.cntk:RunDir=/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu
configparameters: 01_OneHidden.cntk:test=[
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 01_OneHidden.cntk:timestamping=true
configparameters: 01_OneHidden.cntk:traceLevel=1
configparameters: 01_OneHidden.cntk:train=[
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
] [SGD=[maxEpochs=3]]

07/12/2016 15:03:29: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/12/2016 15:03:29: Commands: train test
07/12/2016 15:03:29: Precision = "float"
07/12/2016 15:03:29: CNTKModelPath: /tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models/01_OneHidden
07/12/2016 15:03:29: CNTKCommandTrainInfo: train : 3
07/12/2016 15:03:29: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

07/12/2016 15:03:29: ##############################################################################
07/12/2016 15:03:29: #                                                                            #
07/12/2016 15:03:29: # Action "train"                                                             #
07/12/2016 15:03:29: #                                                                            #
07/12/2016 15:03:29: ##############################################################################

07/12/2016 15:03:29: CNTKCommandTrainBegin: train
NDLBuilder Using GPU 0

07/12/2016 15:03:29: Creating virgin network.

Post-processing network...

4 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	ol.z = Plus()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *] -> [784 x 1 x *]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *] -> [200 x 1 x *]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *], [200 x 1] -> [200 x 1 x *]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *] -> [10 x 1 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *], [10 x 1 x *], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/12/2016 15:03:29: Created model with 17 nodes on GPU 0.

07/12/2016 15:03:29: Training criterion node(s):
07/12/2016 15:03:29: 	ce = CrossEntropyWithSoftmax

07/12/2016 15:03:29: Evaluation criterion node(s):

07/12/2016 15:03:29: 	top5Errs = ErrorPrediction
07/12/2016 15:03:29: 	errs = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *]] [features Gradient[784 x *]] [labels Gradient[10 x *]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x7f0b96bbbd78: {[h1.b Value[200 x 1]] }
0x7f0b96bbcf58: {[ol.W Value[10 x 200]] }
0x7f0b96bbde68: {[ol.b Value[10 x 1]] }
0x7f0b96bbf7f8: {[unnamed89 Value[1 x 1]] }
0x7f0b96bc3358: {[ol.z Value[10 x 1 x *]] }
0x7f0b96bc3518: {[ce Value[1]] }
0x7f0b96bc4aa8: {[featScaled Value[784 x 1 x *]] }
0x7f0b96bc4f78: {[h1.t Value[200 x 1 x *]] }
0x7f0b96bc50d8: {[h1.W Gradient[200 x 784]] [h1.z Value[200 x 1 x *]] }
0x7f0b96bc5298: {[h1.t Gradient[200 x 1 x *]] [h1.y Value[200 x 1 x *]] }
0x7f0b96bc5458: {[h1.z Gradient[200 x 1 x *]] [ol.t Value[10 x 1 x *]] }
0x7f0b96bc6478: {[ce Gradient[1]] }
0x7f0b96bc6638: {[ol.W Gradient[10 x 200]] [ol.z Gradient[10 x 1 x *]] }
0x7f0b96bc67f8: {[ol.t Gradient[10 x 1 x *]] }
0x7f0b96bc69b8: {[ol.b Gradient[10 x 1]] }
0x7f0b96bc6b78: {[h1.b Gradient[200 x 1]] [h1.y Gradient[200 x 1 x *]] }
0x7f0b96bdb358: {[featScale Value[1 x 1]] }
0x7f0b96bdc578: {[labels Value[10 x *]] }
0x7f0b96bdcc88: {[h1.W Value[200 x 784]] }
0x7f0b979018a8: {[features Value[784 x *]] }
0x7f0b9bc537a8: {[top5Errs Value[1]] }
0x7f0b9bc53968: {[errs Value[1]] }

07/12/2016 15:03:29: No PreCompute nodes found, skipping PreCompute step.

07/12/2016 15:03:29: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..60000] (first sequence at sample 0), data subset 0 of 1

07/12/2016 15:03:29: Starting minibatch loop.
07/12/2016 15:03:36:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: ce = 1.30306763 * 16000; top5Errs = 9.656% * 16000; errs = 38.594% * 16000; time = 6.8269s; samplesPerSecond = 2343.7
07/12/2016 15:03:38:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.49598816 * 16000; top5Errs = 0.919% * 16000; errs = 13.562% * 16000; time = 1.5791s; samplesPerSecond = 10132.5
07/12/2016 15:03:39:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.39288684 * 16000; top5Errs = 0.819% * 16000; errs = 10.725% * 16000; time = 1.5732s; samplesPerSecond = 10170.5
07/12/2016 15:03:41: Finished Epoch[ 1 of 3]: [Training] ce = 0.65585319 * 60000; top5Errs = 3.175% * 60000; errs = 18.795% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.003125; epochTime=11.2503s
07/12/2016 15:03:41: SGD: Saving checkpoint model '/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models/01_OneHidden.1'

07/12/2016 15:03:41: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 1: frames [60000..120000] (first sequence at sample 60000), data subset 0 of 1

07/12/2016 15:03:41: Starting minibatch loop.
07/12/2016 15:03:42:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.32506088 * 16000; top5Errs = 0.594% * 16000; errs = 9.406% * 16000; time = 1.5718s; samplesPerSecond = 10179.6
07/12/2016 15:03:44:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.31886447 * 16000; top5Errs = 0.531% * 16000; errs = 9.156% * 16000; time = 1.5722s; samplesPerSecond = 10176.6
07/12/2016 15:03:45:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.31011084 * 16000; top5Errs = 0.575% * 16000; errs = 9.081% * 16000; time = 1.5637s; samplesPerSecond = 10232.4
07/12/2016 15:03:46: Finished Epoch[ 2 of 3]: [Training] ce = 0.31500049 * 60000; top5Errs = 0.558% * 60000; errs = 9.160% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.003125; epochTime=5.93083s
07/12/2016 15:03:46: SGD: Saving checkpoint model '/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models/01_OneHidden.2'

07/12/2016 15:03:46: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 2: frames [120000..180000] (first sequence at sample 120000), data subset 0 of 1

07/12/2016 15:03:46: Starting minibatch loop.
07/12/2016 15:03:48:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.28529074 * 16000; top5Errs = 0.444% * 16000; errs = 8.475% * 16000; time = 1.5655s; samplesPerSecond = 10220.6
07/12/2016 15:03:50:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.28853751 * 16000; top5Errs = 0.481% * 16000; errs = 8.225% * 16000; time = 1.5625s; samplesPerSecond = 10239.7
07/12/2016 15:03:51:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.26834229 * 16000; top5Errs = 0.450% * 16000; errs = 7.575% * 16000; time = 1.5643s; samplesPerSecond = 10228.0
07/12/2016 15:03:52: Finished Epoch[ 3 of 3]: [Training] ce = 0.27460905 * 60000; top5Errs = 0.448% * 60000; errs = 7.985% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.003125; epochTime=5.9063s
07/12/2016 15:03:52: SGD: Saving checkpoint model '/tmp/cntk-test-20160712140039.572838/Examples/Image/MNIST_01_OneHidden@debug_gpu/Models/01_OneHidden'
07/12/2016 15:03:53: CNTKCommandTrainEnd: train

07/12/2016 15:03:53: Action "train" complete.


07/12/2016 15:03:53: ##############################################################################
07/12/2016 15:03:53: #                                                                            #
07/12/2016 15:03:53: # Action "test"                                                              #
07/12/2016 15:03:53: #                                                                            #
07/12/2016 15:03:53: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *1] -> [784 x 1 x *1]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *1] -> [200 x 1 x *1]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *1], [10 x 1 x *1], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[ce Gradient[1]] [errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *1]] [features Gradient[784 x *1]] [h1.W Gradient[200 x 784]] [h1.b Gradient[200 x 1]] [h1.t Gradient[200 x 1 x *1]] [h1.y Gradient[200 x 1 x *1]] [h1.z Gradient[200 x 1 x *1]] [labels Gradient[10 x *1]] [ol.W Gradient[10 x 200]] [ol.b Gradient[10 x 1]] [ol.t Gradient[10 x 1 x *1]] [ol.z Gradient[10 x 1 x *1]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x7f0b9bc00848: {[unnamed89 Value[1 x 1]] }
0x7f0b9bc03838: {[top5Errs Value[1]] }
0x7f0b9bc04e28: {[featScaled Value[784 x 1 x *1]] }
0x7f0b9bc051e8: {[h1.t Value[200 x 1 x *1]] }
0x7f0b9bc053a8: {[h1.z Value[200 x 1 x *1]] }
0x7f0b9bc05568: {[h1.y Value[200 x 1 x *1]] }
0x7f0b9bc05728: {[ol.t Value[10 x 1 x *1]] }
0x7f0b9bc058e8: {[ol.z Value[10 x 1 x *1]] }
0x7f0b9c7484e8: {[ce Value[1]] }
0x7f0b9c748b88: {[errs Value[1]] }
0x7f0b9c749f28: {[featScale Value[1 x 1]] }
0x7f0b9c74ab28: {[features Value[784 x *1]] }
0x7f0b9c74b9d8: {[h1.b Value[200 x 1]] }
0x7f0b9c74bec8: {[h1.W Value[200 x 784]] }
0x7f0b9c74daa8: {[labels Value[10 x *1]] }
0x7f0b9c74e178: {[ol.b Value[10 x 1]] }
0x7f0b9c74f228: {[ol.W Value[10 x 200]] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1
07/12/2016 15:03:54: Minibatch[1-10]: ce = 0.24963629 * 10000; errs = 7.100% * 10000; top5Errs = 0.400% * 10000
07/12/2016 15:03:54: Final Results: Minibatch[1-10]: ce = 0.24963629 * 10000; perplexity = 1.28355849; errs = 7.100% * 10000; top5Errs = 0.400% * 10000

07/12/2016 15:03:54: Action "test" complete.

07/12/2016 15:03:54: __COMPLETED__