CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3530 @ 2.80GHz
    Hardware threads: 4
    Total Memory: 12580404 kB
-------------------------------------------------------------------
=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 2 C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu DeviceId=0 timestamping=true numCPUThreads=2 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jul 12 2016 06:45:36
		Last modified date: Fri Jul  8 10:29:45 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
		Built by svcphil on LIANA-09-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Jul 12 2016 06:45:36
		Last modified date: Fri Jul  8 10:29:45 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
		Built by svcphil on LIANA-09-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
MPI Rank 0: 07/12/2016 07:37:05: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr_speechTrain.logrank0
MPI Rank 0: 07/12/2016 07:37:05: -------------------------------------------------------------------
MPI Rank 0: 07/12/2016 07:37:05: Build info: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: 		Built time: Jul 12 2016 06:45:36
MPI Rank 0: 07/12/2016 07:37:05: 		Last modified date: Fri Jul  8 10:29:45 2016
MPI Rank 0: 07/12/2016 07:37:05: 		Build type: Debug
MPI Rank 0: 07/12/2016 07:37:05: 		Build target: GPU
MPI Rank 0: 07/12/2016 07:37:05: 		With 1bit-SGD: no
MPI Rank 0: 07/12/2016 07:37:05: 		Math lib: mkl
MPI Rank 0: 07/12/2016 07:37:05: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 0: 07/12/2016 07:37:05: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 0: 07/12/2016 07:37:05: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 0: 07/12/2016 07:37:05: 		Build Branch: HEAD
MPI Rank 0: 07/12/2016 07:37:05: 		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
MPI Rank 0: 07/12/2016 07:37:05: 		Built by svcphil on LIANA-09-w
MPI Rank 0: 07/12/2016 07:37:05: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 0: 07/12/2016 07:37:05: -------------------------------------------------------------------
MPI Rank 0: 07/12/2016 07:37:05: -------------------------------------------------------------------
MPI Rank 0: 07/12/2016 07:37:05: GPU info:
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 0: 07/12/2016 07:37:05: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: Running on cntk-muc00 at 2016/07/12 07:37:05
MPI Rank 0: 07/12/2016 07:37:05: Command line: 
MPI Rank 0: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu  DeviceId=0  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/12/2016 07:37:05: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/12/2016 07:37:05: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = 0
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=0
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 0: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 07/12/2016 07:37:05: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 07/12/2016 07:37:05: Commands: speechTrain
MPI Rank 0: 07/12/2016 07:37:05: Precision = "double"
MPI Rank 0: 07/12/2016 07:37:05: Using 2 CPU threads.
MPI Rank 0: 07/12/2016 07:37:05: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn
MPI Rank 0: 07/12/2016 07:37:05: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 07/12/2016 07:37:05: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: ##############################################################################
MPI Rank 0: 07/12/2016 07:37:05: #                                                                            #
MPI Rank 0: 07/12/2016 07:37:05: # Action "train"                                                             #
MPI Rank 0: 07/12/2016 07:37:05: #                                                                            #
MPI Rank 0: 07/12/2016 07:37:05: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:05: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using GPU 0
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:07: Creating virgin network.
MPI Rank 0: Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:08: Created model with 25 nodes on GPU 0.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:08: Training criterion node(s):
MPI Rank 0: 07/12/2016 07:37:08: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:08: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:08: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 000000240BC0B180: {[features Value[363 x *]] }
MPI Rank 0: 000000240EE7EAF0: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 000000240EE7EBC0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 000000240EE7EF00: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 000000240EE7F0A0: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 000000240EE7F170: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 000000240EE7F720: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 000000240EE7F7F0: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 000000240EE7FDA0: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 000000240EE7FF40: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 000000240EE800E0: {[LogOfPrior Value[132]] }
MPI Rank 0: 000000240EE801B0: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 000000240EE80280: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 000000240EE80900: {[W0*features Value[512 x *]] }
MPI Rank 0: 000000240EE809D0: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 000000242029AE00: {[W1 Value[512 x 512]] }
MPI Rank 0: 000000242029B140: {[B1 Value[512 x 1]] }
MPI Rank 0: 000000242029B480: {[B0 Value[512 x 1]] }
MPI Rank 0: 000000242029B550: {[W2 Value[132 x 512]] }
MPI Rank 0: 000000242029B620: {[B2 Value[132 x 1]] }
MPI Rank 0: 000000242029B6F0: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 000000242029B7C0: {[labels Value[132 x *]] }
MPI Rank 0: 000000242029B960: {[Prior Value[132]] }
MPI Rank 0: 000000242029BA30: {[W0 Value[512 x 363]] }
MPI Rank 0: 000000242029BBD0: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 000000242029BCA0: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 000000242029BD70: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 000000242029BE40: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:08: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:08: 	MeanOfFeatures = Mean()
MPI Rank 0: 07/12/2016 07:37:08: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 07/12/2016 07:37:08: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:37: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:38: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:38: Starting minibatch loop.
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.65804635 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0746s; samplesPerSecond = 2574.6
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.62565835 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0599s; samplesPerSecond = 3203.6
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.57062483 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0603s; samplesPerSecond = 3183.6
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.80479154 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0603s; samplesPerSecond = 3181.9
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.46409763 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0604s; samplesPerSecond = 3179.2
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.16284928 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0604s; samplesPerSecond = 3177.7
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.03903169 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0604s; samplesPerSecond = 3177.0
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.10407236 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0605s; samplesPerSecond = 3175.7
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.10961744 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0603s; samplesPerSecond = 3185.2
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.96748567 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0604s; samplesPerSecond = 3178.3
MPI Rank 0: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.91905803 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0604s; samplesPerSecond = 3181.3
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.81015540 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0603s; samplesPerSecond = 3181.5
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.78427265 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0602s; samplesPerSecond = 3187.4
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 4.00695393 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0603s; samplesPerSecond = 3183.0
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.66469048 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0605s; samplesPerSecond = 3176.2
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.73679978 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0606s; samplesPerSecond = 3170.6
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.96420177 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0604s; samplesPerSecond = 3179.9
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.70916176 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0603s; samplesPerSecond = 3182.4
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.76843506 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0603s; samplesPerSecond = 3185.5
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.73826508 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0606s; samplesPerSecond = 3170.7
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.87086993 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0603s; samplesPerSecond = 3182.2
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.38500276 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0604s; samplesPerSecond = 3176.5
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52596026 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0604s; samplesPerSecond = 3179.7
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.48840296 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0604s; samplesPerSecond = 3181.1
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.46921261 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0604s; samplesPerSecond = 3178.7
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.46511910 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0604s; samplesPerSecond = 3180.1
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.28271907 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0605s; samplesPerSecond = 3173.3
MPI Rank 0: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.39702075 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0602s; samplesPerSecond = 3188.4
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.47785612 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0603s; samplesPerSecond = 3186.2
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.15157022 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0604s; samplesPerSecond = 3178.1
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.39876822 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0604s; samplesPerSecond = 3180.2
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.32778469 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0603s; samplesPerSecond = 3182.2
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.24154430 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0604s; samplesPerSecond = 3176.8
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.41213891 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0604s; samplesPerSecond = 3177.1
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.13383610 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0605s; samplesPerSecond = 3172.3
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.14239435 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0605s; samplesPerSecond = 3174.3
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 2.97779094 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0603s; samplesPerSecond = 3183.4
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.04895235 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0604s; samplesPerSecond = 3179.5
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.21468062 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0603s; samplesPerSecond = 3186.3
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.16820529 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0603s; samplesPerSecond = 3183.6
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.22409897 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0603s; samplesPerSecond = 3183.0
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.25826734 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0604s; samplesPerSecond = 3176.5
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.26279096 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0604s; samplesPerSecond = 3180.8
MPI Rank 0: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.21006282 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0603s; samplesPerSecond = 3184.4
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.01578673 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0605s; samplesPerSecond = 3174.6
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 2.89813268 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0606s; samplesPerSecond = 3169.7
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.19728399 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0605s; samplesPerSecond = 3171.1
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.15411430 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0604s; samplesPerSecond = 3176.4
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.01326978 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0604s; samplesPerSecond = 3179.7
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.79310474 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0605s; samplesPerSecond = 3173.0
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.82281314 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0603s; samplesPerSecond = 3184.0
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.09518025 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0604s; samplesPerSecond = 3177.4
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.91892048 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0603s; samplesPerSecond = 3182.1
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.92536417 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0603s; samplesPerSecond = 3185.2
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.03583847 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0603s; samplesPerSecond = 3184.6
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.82019224 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0605s; samplesPerSecond = 3175.4
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.91262265 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0605s; samplesPerSecond = 3171.4
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.73223241 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0604s; samplesPerSecond = 3179.0
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.68862645 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0602s; samplesPerSecond = 3190.0
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75745337 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0604s; samplesPerSecond = 3177.5
MPI Rank 0: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.84299111 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0604s; samplesPerSecond = 3181.0
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.75770219 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0604s; samplesPerSecond = 3176.2
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.87450418 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0604s; samplesPerSecond = 3178.9
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.89015025 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0602s; samplesPerSecond = 3190.9
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.62613241 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0602s; samplesPerSecond = 3187.9
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.77627068 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0611s; samplesPerSecond = 3144.0
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.46763598 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0612s; samplesPerSecond = 3137.7
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.59689239 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0609s; samplesPerSecond = 3150.1
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.82353623 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0614s; samplesPerSecond = 3127.2
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 3.06864418 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0612s; samplesPerSecond = 3137.3
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.63936859 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0613s; samplesPerSecond = 3130.9
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.72188818 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0612s; samplesPerSecond = 3137.2
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.62745298 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0611s; samplesPerSecond = 3141.8
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.55204863 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0616s; samplesPerSecond = 3118.7
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.55760334 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0610s; samplesPerSecond = 3145.7
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.58850661 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0613s; samplesPerSecond = 3133.7
MPI Rank 0: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.53281010 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0610s; samplesPerSecond = 3145.0
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.36162259 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0611s; samplesPerSecond = 3140.4
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.37696555 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0612s; samplesPerSecond = 3135.8
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.41790885 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0574s; samplesPerSecond = 3342.5
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.33448049 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0570s; samplesPerSecond = 3366.2
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.42909852 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0594s; samplesPerSecond = 3231.8
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.46384274 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0612s; samplesPerSecond = 3136.9
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.46591488 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0612s; samplesPerSecond = 3137.7
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.37461608 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0611s; samplesPerSecond = 3140.0
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.40429038 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0613s; samplesPerSecond = 3133.7
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.37321090 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0612s; samplesPerSecond = 3135.2
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.54878482 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0611s; samplesPerSecond = 3140.0
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.53276774 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0610s; samplesPerSecond = 3148.7
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.59542850 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0613s; samplesPerSecond = 3130.5
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.50214991 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0614s; samplesPerSecond = 3127.7
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.38644258 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0611s; samplesPerSecond = 3144.3
MPI Rank 0: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.17526377 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0612s; samplesPerSecond = 3135.7
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.22078259 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0611s; samplesPerSecond = 3140.5
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.29832056 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0612s; samplesPerSecond = 3138.2
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.14522063 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0612s; samplesPerSecond = 3139.0
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.39607238 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0613s; samplesPerSecond = 3134.6
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.36460235 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0607s; samplesPerSecond = 3163.2
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.25615950 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0596s; samplesPerSecond = 3223.0
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.03266100 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.0613s; samplesPerSecond = 3134.2
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.21219099 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0610s; samplesPerSecond = 3146.7
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.41727042 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0611s; samplesPerSecond = 3144.6
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.23405012 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0612s; samplesPerSecond = 3134.9
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.21779471 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0615s; samplesPerSecond = 3121.5
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.32104174 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0613s; samplesPerSecond = 3131.5
MPI Rank 0: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.31229698 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0604s; samplesPerSecond = 3177.7
MPI Rank 0: 07/12/2016 07:37:44: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.03339198 * 20480; EvalErrorPrediction = 0.73159180 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=6.51452s
MPI Rank 0: 07/12/2016 07:37:44: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:44: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:44: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.14748701 * 535; EvalErrorPrediction = 0.58504673 * 535; time = 0.1350s; samplesPerSecond = 3963.2
MPI Rank 0: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.11068975 * 576; EvalErrorPrediction = 0.57291667 * 576; time = 0.1304s; samplesPerSecond = 4417.8
MPI Rank 0: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.11765982 * 535; EvalErrorPrediction = 0.58878505 * 535; time = 0.1197s; samplesPerSecond = 4470.3
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.07 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.62 seconds since last report (0.00 seconds on comm.); 4330 samples processed by 2 workers (2213 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 6.99k samplesPerSecond , throughputPerWorker = 3.49k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.00846206 * 567; EvalErrorPrediction = 0.55026455 * 567; time = 0.2093s; samplesPerSecond = 2708.8
MPI Rank 0: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.04158327 * 562; EvalErrorPrediction = 0.52846975 * 562; time = 0.1214s; samplesPerSecond = 4628.4
MPI Rank 0: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.00982628 * 522; EvalErrorPrediction = 0.54214559 * 522; time = 0.1147s; samplesPerSecond = 4550.3
MPI Rank 0: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.00221127 * 561; EvalErrorPrediction = 0.49376114 * 561; time = 0.1165s; samplesPerSecond = 4813.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.08 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.58 seconds since last report (0.00 seconds on comm.); 4269 samples processed by 2 workers (2192 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 7.40k samplesPerSecond , throughputPerWorker = 3.70k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.99404316 * 547; EvalErrorPrediction = 0.56855576 * 547; time = 0.2223s; samplesPerSecond = 2460.4
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.02446557 * 551; EvalErrorPrediction = 0.55172414 * 551; time = 0.1194s; samplesPerSecond = 4614.2
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.00521672 * 535; EvalErrorPrediction = 0.54766355 * 535; time = 0.1183s; samplesPerSecond = 4522.7
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.03919352 * 557; EvalErrorPrediction = 0.54219031 * 557; time = 0.1191s; samplesPerSecond = 4676.9
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.08152922 * 541; EvalErrorPrediction = 0.56192237 * 541; time = 0.1275s; samplesPerSecond = 4244.4
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.07663445 * 529; EvalErrorPrediction = 0.58979206 * 529; time = 0.0966s; samplesPerSecond = 5477.5
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.02670673 * 525; EvalErrorPrediction = 0.55619048 * 525; time = 0.0998s; samplesPerSecond = 5259.5
MPI Rank 0: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.96050653 * 534; EvalErrorPrediction = 0.50936330 * 534; time = 0.0982s; samplesPerSecond = 5440.0
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.92827012 * 537; EvalErrorPrediction = 0.54376164 * 537; time = 0.0970s; samplesPerSecond = 5537.5
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.02787528 * 528; EvalErrorPrediction = 0.58143939 * 528; time = 0.0961s; samplesPerSecond = 5491.9
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.99419102 * 529; EvalErrorPrediction = 0.54820416 * 529; time = 0.0971s; samplesPerSecond = 5450.6
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.08625848 * 549; EvalErrorPrediction = 0.55191257 * 549; time = 0.0984s; samplesPerSecond = 5581.9
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.91412563 * 553; EvalErrorPrediction = 0.52622061 * 553; time = 0.0990s; samplesPerSecond = 5587.0
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.00748459 * 533; EvalErrorPrediction = 0.54221388 * 533; time = 0.0966s; samplesPerSecond = 5516.4
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.83884251 * 550; EvalErrorPrediction = 0.50181818 * 550; time = 0.0988s; samplesPerSecond = 5565.6
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.99843967 * 544; EvalErrorPrediction = 0.53860294 * 544; time = 0.0974s; samplesPerSecond = 5582.6
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.02907841 * 531; EvalErrorPrediction = 0.55932203 * 531; time = 0.0977s; samplesPerSecond = 5436.0
MPI Rank 0: 07/12/2016 07:37:47:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.93046808 * 539; EvalErrorPrediction = 0.51948052 * 539; time = 0.0970s; samplesPerSecond = 5559.1
MPI Rank 0: 07/12/2016 07:37:48:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.87575760 * 533; EvalErrorPrediction = 0.50844278 * 533; time = 0.0986s; samplesPerSecond = 5406.0
MPI Rank 0: 07/12/2016 07:37:48:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.97398663 * 371; EvalErrorPrediction = 0.52830189 * 371; time = 0.0465s; samplesPerSecond = 7986.2
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.92 seconds since last report (0.00 seconds on comm.); 11881 samples processed by 2 workers (10069 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 6.19k samplesPerSecond , throughputPerWorker = 3.09k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:48: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.03823873 * 20480; EvalErrorPrediction = 0.55595703 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=3.11773s
MPI Rank 0: 07/12/2016 07:37:48: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:48: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:48: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.50 seconds since last report (0.00 seconds on comm.); 4271 samples processed by 2 workers (2127 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 8.58k samplesPerSecond , throughputPerWorker = 4.29k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:48:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.95679735 * 2127; EvalErrorPrediction = 0.54207804 * 2127; time = 0.4164s; samplesPerSecond = 5107.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.06-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.49 seconds since last report (0.00 seconds on comm.); 4365 samples processed by 2 workers (2179 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 8.92k samplesPerSecond , throughputPerWorker = 4.46k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:49:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.90971758 * 2179; EvalErrorPrediction = 0.53464892 * 2179; time = 0.4887s; samplesPerSecond = 4458.5
MPI Rank 0: 07/12/2016 07:37:49:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.91751409 * 2170; EvalErrorPrediction = 0.53225806 * 2170; time = 0.3971s; samplesPerSecond = 5464.7
MPI Rank 0: 07/12/2016 07:37:50:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.92758831 * 2124; EvalErrorPrediction = 0.53531073 * 2124; time = 0.3555s; samplesPerSecond = 5974.0
MPI Rank 0: 07/12/2016 07:37:50:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.89305444 * 2120; EvalErrorPrediction = 0.51226415 * 2120; time = 0.3562s; samplesPerSecond = 5951.9
MPI Rank 0: 07/12/2016 07:37:50:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87687785 * 2132; EvalErrorPrediction = 0.53001876 * 2132; time = 0.3605s; samplesPerSecond = 5913.4
MPI Rank 0: 07/12/2016 07:37:51:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.90309960 * 1422; EvalErrorPrediction = 0.54219409 * 1422; time = 0.1585s; samplesPerSecond = 8973.6
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.64 seconds since last report (0.00 seconds on comm.); 11844 samples processed by 2 workers (9968 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 7.21k samplesPerSecond , throughputPerWorker = 3.61k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:51: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.92941441 * 20480; EvalErrorPrediction = 0.53535156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=2.63042s
MPI Rank 0: 07/12/2016 07:37:51: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:51: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:51: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.51 seconds since last report (0.00 seconds on comm.); 4335 samples processed by 2 workers (2151 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 8.58k samplesPerSecond , throughputPerWorker = 4.29k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:51:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.90949196 * 2151; EvalErrorPrediction = 0.51929335 * 2151; time = 0.4219s; samplesPerSecond = 5098.7
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.06-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.47 seconds since last report (0.00 seconds on comm.); 4432 samples processed by 2 workers (2120 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 9.33k samplesPerSecond , throughputPerWorker = 4.67k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:52:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.90745321 * 2120; EvalErrorPrediction = 0.54198113 * 2120; time = 0.4745s; samplesPerSecond = 4467.9
MPI Rank 0: 07/12/2016 07:37:52:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.90330247 * 2101; EvalErrorPrediction = 0.53355545 * 2101; time = 0.3930s; samplesPerSecond = 5345.6
MPI Rank 0: 07/12/2016 07:37:53:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.87926090 * 2045; EvalErrorPrediction = 0.52176039 * 2045; time = 0.3469s; samplesPerSecond = 5895.0
MPI Rank 0: 07/12/2016 07:37:53:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.91943931 * 2111; EvalErrorPrediction = 0.53102795 * 2111; time = 0.3501s; samplesPerSecond = 6030.1
MPI Rank 0: 07/12/2016 07:37:53:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87327023 * 2053; EvalErrorPrediction = 0.52313687 * 2053; time = 0.3484s; samplesPerSecond = 5891.9
MPI Rank 0: 07/12/2016 07:37:53:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88066156 * 1461; EvalErrorPrediction = 0.50992471 * 1461; time = 0.1704s; samplesPerSecond = 8572.2
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.62 seconds since last report (0.00 seconds on comm.); 11713 samples processed by 2 workers (9771 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 7.22k samplesPerSecond , throughputPerWorker = 3.61k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:53: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.90252004 * 20480; EvalErrorPrediction = 0.52656250 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=2.60469s
MPI Rank 0: 07/12/2016 07:37:54: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:54: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:54: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.09 seconds , average latency = 0.09 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.56 seconds since last report (0.00 seconds on comm.); 4404 samples processed by 2 workers (2103 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 7.88k samplesPerSecond , throughputPerWorker = 3.94k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:54:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.88041912 * 2103; EvalErrorPrediction = 0.51307656 * 2103; time = 0.4806s; samplesPerSecond = 4376.0
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.08 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.49 seconds since last report (0.00 seconds on comm.); 4390 samples processed by 2 workers (2067 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 8.97k samplesPerSecond , throughputPerWorker = 4.48k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:55:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.84999995 * 2067; EvalErrorPrediction = 0.49927431 * 2067; time = 0.4891s; samplesPerSecond = 4225.7
MPI Rank 0: 07/12/2016 07:37:55:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.85995943 * 2088; EvalErrorPrediction = 0.50862069 * 2088; time = 0.3930s; samplesPerSecond = 5312.4
MPI Rank 0: 07/12/2016 07:37:56:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.84387860 * 2081; EvalErrorPrediction = 0.51225372 * 2081; time = 0.3472s; samplesPerSecond = 5994.3
MPI Rank 0: 07/12/2016 07:37:56:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.85583561 * 2068; EvalErrorPrediction = 0.52852998 * 2068; time = 0.3503s; samplesPerSecond = 5903.8
MPI Rank 0: 07/12/2016 07:37:56:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.83924102 * 2070; EvalErrorPrediction = 0.49227053 * 2070; time = 0.3494s; samplesPerSecond = 5925.1
MPI Rank 0: 07/12/2016 07:37:56:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.85732727 * 1433; EvalErrorPrediction = 0.51430565 * 1433; time = 0.1600s; samplesPerSecond = 8954.1
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.61 seconds since last report (0.00 seconds on comm.); 11686 samples processed by 2 workers (9740 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 7.24k samplesPerSecond , throughputPerWorker = 3.62k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:56: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.87198086 * 20480; EvalErrorPrediction = 0.51333008 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=2.6644s
MPI Rank 0: 07/12/2016 07:37:57: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn'
MPI Rank 0: 07/12/2016 07:37:57: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:57: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:57: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 07/12/2016 07:37:05: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr_speechTrain.logrank1
MPI Rank 1: 07/12/2016 07:37:05: -------------------------------------------------------------------
MPI Rank 1: 07/12/2016 07:37:05: Build info: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:05: 		Built time: Jul 12 2016 06:45:36
MPI Rank 1: 07/12/2016 07:37:05: 		Last modified date: Fri Jul  8 10:29:45 2016
MPI Rank 1: 07/12/2016 07:37:05: 		Build type: Debug
MPI Rank 1: 07/12/2016 07:37:05: 		Build target: GPU
MPI Rank 1: 07/12/2016 07:37:05: 		With 1bit-SGD: no
MPI Rank 1: 07/12/2016 07:37:05: 		Math lib: mkl
MPI Rank 1: 07/12/2016 07:37:05: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 1: 07/12/2016 07:37:05: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 1: 07/12/2016 07:37:05: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 1: 07/12/2016 07:37:05: 		Build Branch: HEAD
MPI Rank 1: 07/12/2016 07:37:05: 		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
MPI Rank 1: 07/12/2016 07:37:05: 		Built by svcphil on LIANA-09-w
MPI Rank 1: 07/12/2016 07:37:05: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 1: 07/12/2016 07:37:05: -------------------------------------------------------------------
MPI Rank 1: 07/12/2016 07:37:06: -------------------------------------------------------------------
MPI Rank 1: 07/12/2016 07:37:06: GPU info:
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 1: 07/12/2016 07:37:06: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: Running on cntk-muc00 at 2016/07/12 07:37:06
MPI Rank 1: 07/12/2016 07:37:06: Command line: 
MPI Rank 1: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu  DeviceId=0  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/12/2016 07:37:06: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/12/2016 07:37:06: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = 0
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=0
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 1: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 07/12/2016 07:37:06: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 07/12/2016 07:37:06: Commands: speechTrain
MPI Rank 1: 07/12/2016 07:37:06: Precision = "double"
MPI Rank 1: 07/12/2016 07:37:06: Using 2 CPU threads.
MPI Rank 1: 07/12/2016 07:37:06: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_gpu/models/cntkSpeech.dnn
MPI Rank 1: 07/12/2016 07:37:06: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 07/12/2016 07:37:06: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: ##############################################################################
MPI Rank 1: 07/12/2016 07:37:06: #                                                                            #
MPI Rank 1: 07/12/2016 07:37:06: # Action "train"                                                             #
MPI Rank 1: 07/12/2016 07:37:06: #                                                                            #
MPI Rank 1: 07/12/2016 07:37:06: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:06: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using GPU 0
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:08: Creating virgin network.
MPI Rank 1: Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:08: Created model with 25 nodes on GPU 0.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:08: Training criterion node(s):
MPI Rank 1: 07/12/2016 07:37:08: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:08: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:08: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0000005A2D051320: {[features Value[363 x *]] }
MPI Rank 1: 0000005A3060F920: {[labels Value[132 x *]] }
MPI Rank 1: 0000005A3060F9F0: {[B0 Value[512 x 1]] }
MPI Rank 1: 0000005A3060FAC0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0000005A3060FC60: {[LogOfPrior Value[132]] }
MPI Rank 1: 0000005A3060FD30: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0000005A3060FFA0: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0000005A30610210: {[W1 Value[512 x 512]] }
MPI Rank 1: 0000005A306102E0: {[B1 Value[512 x 1]] }
MPI Rank 1: 0000005A306106F0: {[Prior Value[132]] }
MPI Rank 1: 0000005A306107C0: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0000005A30610890: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0000005A30610960: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0000005A30610B00: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0000005A30610BD0: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0000005A30610CA0: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0000005A30610F10: {[B2 Value[132 x 1]] }
MPI Rank 1: 0000005A30610FE0: {[W0*features Value[512 x *]] }
MPI Rank 1: 0000005A306110B0: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0000005A30611180: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0000005A306113F0: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0000005A30611590: {[W0 Value[512 x 363]] }
MPI Rank 1: 0000005A30611660: {[W2 Value[132 x 512]] }
MPI Rank 1: 0000005A30611730: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0000005A30F0F850: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0000005A30F0F920: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0000005A30F10210: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0000005A30F10960: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:08: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:08: 	MeanOfFeatures = Mean()
MPI Rank 1: 07/12/2016 07:37:08: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 07/12/2016 07:37:08: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:38: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:38: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:38: Starting minibatch loop.
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.65804635 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0537s; samplesPerSecond = 3573.8
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.62565835 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0600s; samplesPerSecond = 3200.1
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.57062483 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0603s; samplesPerSecond = 3182.2
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.80479154 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0603s; samplesPerSecond = 3185.3
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.46409763 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0603s; samplesPerSecond = 3182.3
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.16284928 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0605s; samplesPerSecond = 3171.8
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.03903169 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0603s; samplesPerSecond = 3182.1
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.10407236 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0604s; samplesPerSecond = 3176.7
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.10961744 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0603s; samplesPerSecond = 3181.5
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.96748567 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0603s; samplesPerSecond = 3181.7
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.91905803 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0605s; samplesPerSecond = 3174.0
MPI Rank 1: 07/12/2016 07:37:38:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.81015540 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0603s; samplesPerSecond = 3183.8
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.78427265 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0602s; samplesPerSecond = 3189.3
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 4.00695393 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0603s; samplesPerSecond = 3182.4
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.66469048 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0604s; samplesPerSecond = 3176.8
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.73679978 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0604s; samplesPerSecond = 3176.2
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.96420177 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0604s; samplesPerSecond = 3179.0
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.70916176 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0604s; samplesPerSecond = 3180.7
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.76843506 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0603s; samplesPerSecond = 3184.6
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.73826508 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0604s; samplesPerSecond = 3179.7
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.87086993 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0605s; samplesPerSecond = 3171.1
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.38500276 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0605s; samplesPerSecond = 3174.8
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52596026 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0603s; samplesPerSecond = 3186.5
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.48840296 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0603s; samplesPerSecond = 3182.7
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.46921261 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0605s; samplesPerSecond = 3176.0
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.46511910 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0603s; samplesPerSecond = 3183.3
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.28271907 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0605s; samplesPerSecond = 3171.4
MPI Rank 1: 07/12/2016 07:37:39:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.39702075 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0603s; samplesPerSecond = 3182.4
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.47785612 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0601s; samplesPerSecond = 3194.5
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.15157022 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0605s; samplesPerSecond = 3175.2
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.39876822 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0604s; samplesPerSecond = 3178.7
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.32778469 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0603s; samplesPerSecond = 3185.3
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.24154430 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0603s; samplesPerSecond = 3182.9
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.41213891 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0606s; samplesPerSecond = 3170.5
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.13383610 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0604s; samplesPerSecond = 3179.8
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.14239435 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0605s; samplesPerSecond = 3173.0
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 2.97779094 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0604s; samplesPerSecond = 3179.2
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.04895235 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0604s; samplesPerSecond = 3176.3
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.21468062 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0602s; samplesPerSecond = 3187.4
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.16820529 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0603s; samplesPerSecond = 3186.4
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.22409897 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0603s; samplesPerSecond = 3185.9
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.25826734 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0605s; samplesPerSecond = 3174.3
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.26279096 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0603s; samplesPerSecond = 3181.7
MPI Rank 1: 07/12/2016 07:37:40:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.21006282 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0604s; samplesPerSecond = 3177.9
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.01578673 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0603s; samplesPerSecond = 3185.3
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 2.89813268 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0606s; samplesPerSecond = 3170.0
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.19728399 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0605s; samplesPerSecond = 3174.2
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.15411430 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0606s; samplesPerSecond = 3168.1
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.01326978 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0603s; samplesPerSecond = 3185.7
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.79310474 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0605s; samplesPerSecond = 3175.4
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.82281314 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0604s; samplesPerSecond = 3176.7
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.09518025 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0604s; samplesPerSecond = 3181.0
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.91892048 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0604s; samplesPerSecond = 3179.2
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.92536417 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0603s; samplesPerSecond = 3186.5
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.03583847 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0603s; samplesPerSecond = 3183.6
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.82019224 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0604s; samplesPerSecond = 3176.3
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.91262265 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0605s; samplesPerSecond = 3175.7
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.73223241 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0604s; samplesPerSecond = 3178.8
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.68862645 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0603s; samplesPerSecond = 3184.8
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75745337 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0604s; samplesPerSecond = 3177.7
MPI Rank 1: 07/12/2016 07:37:41:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.84299111 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0603s; samplesPerSecond = 3181.9
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.75770219 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0604s; samplesPerSecond = 3180.4
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.87450418 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0604s; samplesPerSecond = 3178.3
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.89015025 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0603s; samplesPerSecond = 3182.9
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.62613241 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0602s; samplesPerSecond = 3188.6
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.77627068 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0616s; samplesPerSecond = 3114.4
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.46763598 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0613s; samplesPerSecond = 3131.4
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.59689239 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0610s; samplesPerSecond = 3148.8
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.82353623 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0611s; samplesPerSecond = 3144.6
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 3.06864418 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0615s; samplesPerSecond = 3123.6
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.63936859 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0612s; samplesPerSecond = 3136.6
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.72188818 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0613s; samplesPerSecond = 3134.1
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.62745298 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0612s; samplesPerSecond = 3134.8
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.55204863 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0612s; samplesPerSecond = 3137.6
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.55760334 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0613s; samplesPerSecond = 3132.4
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.58850661 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0612s; samplesPerSecond = 3137.0
MPI Rank 1: 07/12/2016 07:37:42:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.53281010 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0612s; samplesPerSecond = 3137.6
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.36162259 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0612s; samplesPerSecond = 3138.6
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.37696555 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0611s; samplesPerSecond = 3144.4
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.41790885 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0615s; samplesPerSecond = 3122.6
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.33448049 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0550s; samplesPerSecond = 3492.4
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.42909852 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0583s; samplesPerSecond = 3292.0
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.46384274 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0604s; samplesPerSecond = 3179.9
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.46591488 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0612s; samplesPerSecond = 3137.0
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.37461608 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0611s; samplesPerSecond = 3141.9
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.40429038 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0612s; samplesPerSecond = 3137.4
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.37321090 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0612s; samplesPerSecond = 3137.2
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.54878482 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0612s; samplesPerSecond = 3135.6
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.53276774 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0612s; samplesPerSecond = 3136.3
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.59542850 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0610s; samplesPerSecond = 3148.4
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.50214991 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0614s; samplesPerSecond = 3125.5
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.38644258 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0611s; samplesPerSecond = 3142.8
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.17526377 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0613s; samplesPerSecond = 3134.3
MPI Rank 1: 07/12/2016 07:37:43:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.22078259 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0612s; samplesPerSecond = 3139.1
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.29832056 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0611s; samplesPerSecond = 3141.1
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.14522063 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0612s; samplesPerSecond = 3138.9
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.39607238 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0612s; samplesPerSecond = 3139.2
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.36460235 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0612s; samplesPerSecond = 3134.8
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.25615950 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0600s; samplesPerSecond = 3201.4
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.03266100 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.0604s; samplesPerSecond = 3180.5
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.21219099 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0609s; samplesPerSecond = 3151.1
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.41727042 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0612s; samplesPerSecond = 3135.6
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.23405012 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0611s; samplesPerSecond = 3142.3
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.21779471 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0614s; samplesPerSecond = 3124.6
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.32104174 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0616s; samplesPerSecond = 3119.0
MPI Rank 1: 07/12/2016 07:37:44:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.31229698 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0612s; samplesPerSecond = 3135.9
MPI Rank 1: 07/12/2016 07:37:44: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.03339198 * 20480; EvalErrorPrediction = 0.73159180 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=6.50289s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:44: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:44: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.37599439 * 233; EvalErrorPrediction = 0.63090129 * 233; time = 0.0636s; samplesPerSecond = 3664.7
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.29274151 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0553s; samplesPerSecond = 3472.9
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.26165995 * 233; EvalErrorPrediction = 0.68240343 * 233; time = 0.0691s; samplesPerSecond = 3373.8
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.21340909 * 201; EvalErrorPrediction = 0.63681592 * 201; time = 0.0566s; samplesPerSecond = 3550.5
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.09115989 * 206; EvalErrorPrediction = 0.58252427 * 206; time = 0.0709s; samplesPerSecond = 2906.2
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.11864588 * 246; EvalErrorPrediction = 0.57723577 * 246; time = 0.0583s; samplesPerSecond = 4217.6
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.23996697 * 207; EvalErrorPrediction = 0.60869565 * 207; time = 0.0629s; samplesPerSecond = 3292.2
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.08989145 * 221; EvalErrorPrediction = 0.61538462 * 221; time = 0.0571s; samplesPerSecond = 3868.0
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.06995234 * 217; EvalErrorPrediction = 0.53456221 * 217; time = 0.0602s; samplesPerSecond = 3602.1
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.62 seconds since last report (0.00 seconds on comm.); 4330 samples processed by 2 workers (2117 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 6.99k samplesPerSecond , throughputPerWorker = 3.50k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.27047767 * 233; EvalErrorPrediction = 0.60515021 * 233; time = 0.0641s; samplesPerSecond = 3635.1
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.20567691 * 211; EvalErrorPrediction = 0.58767773 * 211; time = 0.0668s; samplesPerSecond = 3159.8
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.01978543 * 227; EvalErrorPrediction = 0.55066079 * 227; time = 0.0592s; samplesPerSecond = 3834.7
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.05798987 * 239; EvalErrorPrediction = 0.55648536 * 239; time = 0.0680s; samplesPerSecond = 3513.7
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.83871975 * 243; EvalErrorPrediction = 0.50205761 * 243; time = 0.0677s; samplesPerSecond = 3590.5
MPI Rank 1: 07/12/2016 07:37:45:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.97368311 * 234; EvalErrorPrediction = 0.55555556 * 234; time = 0.0708s; samplesPerSecond = 3304.4
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.25734129 * 231; EvalErrorPrediction = 0.64069264 * 231; time = 0.0609s; samplesPerSecond = 3790.5
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.11275936 * 240; EvalErrorPrediction = 0.57083333 * 240; time = 0.0625s; samplesPerSecond = 3842.7
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.29644821 * 239; EvalErrorPrediction = 0.61506276 * 239; time = 0.0548s; samplesPerSecond = 4365.1
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.58 seconds since last report (0.00 seconds on comm.); 4269 samples processed by 2 workers (2077 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 7.40k samplesPerSecond , throughputPerWorker = 3.70k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.96964076 * 219; EvalErrorPrediction = 0.50228311 * 219; time = 0.0631s; samplesPerSecond = 3469.6
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.87646103 * 215; EvalErrorPrediction = 0.54418605 * 215; time = 0.0634s; samplesPerSecond = 3392.0
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.03003209 * 235; EvalErrorPrediction = 0.55744681 * 235; time = 0.0576s; samplesPerSecond = 4077.3
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.11593993 * 218; EvalErrorPrediction = 0.61467890 * 218; time = 0.0599s; samplesPerSecond = 3641.6
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.97968953 * 224; EvalErrorPrediction = 0.54464286 * 224; time = 0.0568s; samplesPerSecond = 3947.1
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.20116554 * 237; EvalErrorPrediction = 0.57383966 * 237; time = 0.0636s; samplesPerSecond = 3725.3
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.07090517 * 229; EvalErrorPrediction = 0.58078603 * 229; time = 0.0674s; samplesPerSecond = 3395.9
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.89482253 * 235; EvalErrorPrediction = 0.51063830 * 235; time = 0.0619s; samplesPerSecond = 3795.0
MPI Rank 1: 07/12/2016 07:37:46:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.92950527 * 141; EvalErrorPrediction = 0.58865248 * 141; time = 0.0336s; samplesPerSecond = 4195.8
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.92 seconds since last report (1.43 seconds on comm.); 11881 samples processed by 2 workers (1812 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 6.19k samplesPerSecond , throughputPerWorker = 3.09k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:48: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.03823873 * 20480; EvalErrorPrediction = 0.55595703 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=3.1177s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:48: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:48: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:37:48:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.99661659 * 945; EvalErrorPrediction = 0.55238095 * 945; time = 0.1898s; samplesPerSecond = 4979.4
MPI Rank 1: 07/12/2016 07:37:48:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.90829468 * 893; EvalErrorPrediction = 0.51959686 * 893; time = 0.1759s; samplesPerSecond = 5077.3
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.50 seconds since last report (0.00 seconds on comm.); 4271 samples processed by 2 workers (2144 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 8.58k samplesPerSecond , throughputPerWorker = 4.29k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:49:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.95745002 * 902; EvalErrorPrediction = 0.52771619 * 902; time = 0.2254s; samplesPerSecond = 4000.9
MPI Rank 1: 07/12/2016 07:37:49:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.93407709 * 948; EvalErrorPrediction = 0.55274262 * 948; time = 0.1942s; samplesPerSecond = 4881.5
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.49 seconds since last report (0.00 seconds on comm.); 4365 samples processed by 2 workers (2186 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 8.92k samplesPerSecond , throughputPerWorker = 4.46k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:49:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.98281374 * 952; EvalErrorPrediction = 0.55357143 * 952; time = 0.2130s; samplesPerSecond = 4469.5
MPI Rank 1: 07/12/2016 07:37:49:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.98782556 * 940; EvalErrorPrediction = 0.53936170 * 940; time = 0.2187s; samplesPerSecond = 4298.7
MPI Rank 1: 07/12/2016 07:37:49:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 2.02652582 * 626; EvalErrorPrediction = 0.55431310 * 626; time = 0.1112s; samplesPerSecond = 5631.1
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.64 seconds since last report (1.24 seconds on comm.); 11844 samples processed by 2 workers (1876 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 7.21k samplesPerSecond , throughputPerWorker = 3.61k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:51: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.92941441 * 20480; EvalErrorPrediction = 0.53535156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=2.63041s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:51: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:51: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:37:51:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.96438637 * 921; EvalErrorPrediction = 0.54723127 * 921; time = 0.1868s; samplesPerSecond = 4931.2
MPI Rank 1: 07/12/2016 07:37:51:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.90724895 * 952; EvalErrorPrediction = 0.51575630 * 952; time = 0.1936s; samplesPerSecond = 4916.5
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.51 seconds since last report (0.00 seconds on comm.); 4335 samples processed by 2 workers (2184 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 8.58k samplesPerSecond , throughputPerWorker = 4.29k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:51:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.91177057 * 971; EvalErrorPrediction = 0.53038105 * 971; time = 0.2180s; samplesPerSecond = 4453.6
MPI Rank 1: 07/12/2016 07:37:52:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.96376644 * 1027; EvalErrorPrediction = 0.52872444 * 1027; time = 0.1986s; samplesPerSecond = 5170.7
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.47 seconds since last report (0.00 seconds on comm.); 4432 samples processed by 2 workers (2312 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 9.33k samplesPerSecond , throughputPerWorker = 4.67k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:52:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.85034206 * 961; EvalErrorPrediction = 0.52237253 * 961; time = 0.2047s; samplesPerSecond = 4695.0
MPI Rank 1: 07/12/2016 07:37:52:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.94242814 * 1019; EvalErrorPrediction = 0.53778214 * 1019; time = 0.2130s; samplesPerSecond = 4784.6
MPI Rank 1: 07/12/2016 07:37:52:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.82219327 * 587; EvalErrorPrediction = 0.48892675 * 587; time = 0.0971s; samplesPerSecond = 6044.7
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.62 seconds since last report (1.22 seconds on comm.); 11713 samples processed by 2 workers (1942 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 7.22k samplesPerSecond , throughputPerWorker = 3.61k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:53: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.90252004 * 20480; EvalErrorPrediction = 0.52656250 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=2.60468s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:54: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:54: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:37:54:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.99061335 * 969; EvalErrorPrediction = 0.52837977 * 969; time = 0.2234s; samplesPerSecond = 4337.9
MPI Rank 1: 07/12/2016 07:37:54:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.94249101 * 1005; EvalErrorPrediction = 0.53333333 * 1005; time = 0.2136s; samplesPerSecond = 4705.6
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.56 seconds since last report (0.00 seconds on comm.); 4404 samples processed by 2 workers (2301 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 7.88k samplesPerSecond , throughputPerWorker = 3.94k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:54:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.95997464 * 984; EvalErrorPrediction = 0.53760163 * 984; time = 0.2258s; samplesPerSecond = 4357.6
MPI Rank 1: 07/12/2016 07:37:55:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.89498736 * 991; EvalErrorPrediction = 0.51261352 * 991; time = 0.1924s; samplesPerSecond = 5149.5
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.49 seconds since last report (0.00 seconds on comm.); 4390 samples processed by 2 workers (2323 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 8.97k samplesPerSecond , throughputPerWorker = 4.48k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:55:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.83068381 * 1004; EvalErrorPrediction = 0.50199203 * 1004; time = 0.2087s; samplesPerSecond = 4810.6
MPI Rank 1: 07/12/2016 07:37:55:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.89566769 * 1002; EvalErrorPrediction = 0.53293413 * 1002; time = 0.2157s; samplesPerSecond = 4645.2
MPI Rank 1: 07/12/2016 07:37:55:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.80036156 * 615; EvalErrorPrediction = 0.49105691 * 615; time = 0.0986s; samplesPerSecond = 6234.6
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.61 seconds since last report (1.21 seconds on comm.); 11686 samples processed by 2 workers (1946 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 7.24k samplesPerSecond , throughputPerWorker = 3.62k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:56: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.87198086 * 20480; EvalErrorPrediction = 0.51333008 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=2.66437s
MPI Rank 1: 07/12/2016 07:37:57: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:57: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:57: __COMPLETED__
MPI Rank 1: ~MPIWrapper