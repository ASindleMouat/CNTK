CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3530 @ 2.80GHz
    Hardware threads: 4
    Total Memory: 12580404 kB
-------------------------------------------------------------------
=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 2 C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu DeviceId=-1 timestamping=true numCPUThreads=2 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jul 12 2016 06:45:36
		Last modified date: Fri Jul  8 10:29:45 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
		Built by svcphil on LIANA-09-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Jul 12 2016 06:45:36
		Last modified date: Fri Jul  8 10:29:45 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
		Built by svcphil on LIANA-09-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
MPI Rank 0: 07/12/2016 07:32:36: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr_speechTrain.logrank0
MPI Rank 0: 07/12/2016 07:32:36: -------------------------------------------------------------------
MPI Rank 0: 07/12/2016 07:32:36: Build info: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: 		Built time: Jul 12 2016 06:45:36
MPI Rank 0: 07/12/2016 07:32:36: 		Last modified date: Fri Jul  8 10:29:45 2016
MPI Rank 0: 07/12/2016 07:32:36: 		Build type: Debug
MPI Rank 0: 07/12/2016 07:32:36: 		Build target: GPU
MPI Rank 0: 07/12/2016 07:32:36: 		With 1bit-SGD: no
MPI Rank 0: 07/12/2016 07:32:36: 		Math lib: mkl
MPI Rank 0: 07/12/2016 07:32:36: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 0: 07/12/2016 07:32:36: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 0: 07/12/2016 07:32:36: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 0: 07/12/2016 07:32:36: 		Build Branch: HEAD
MPI Rank 0: 07/12/2016 07:32:36: 		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
MPI Rank 0: 07/12/2016 07:32:36: 		Built by svcphil on LIANA-09-w
MPI Rank 0: 07/12/2016 07:32:36: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 0: 07/12/2016 07:32:36: -------------------------------------------------------------------
MPI Rank 0: 07/12/2016 07:32:36: -------------------------------------------------------------------
MPI Rank 0: 07/12/2016 07:32:36: GPU info:
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 0: 07/12/2016 07:32:36: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: Running on cntk-muc00 at 2016/07/12 07:32:36
MPI Rank 0: 07/12/2016 07:32:36: Command line: 
MPI Rank 0: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/12/2016 07:32:36: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/12/2016 07:32:36: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 0: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 07/12/2016 07:32:36: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 07/12/2016 07:32:36: Commands: speechTrain
MPI Rank 0: 07/12/2016 07:32:36: Precision = "double"
MPI Rank 0: 07/12/2016 07:32:36: Using 2 CPU threads.
MPI Rank 0: 07/12/2016 07:32:36: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn
MPI Rank 0: 07/12/2016 07:32:36: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 07/12/2016 07:32:36: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: ##############################################################################
MPI Rank 0: 07/12/2016 07:32:36: #                                                                            #
MPI Rank 0: 07/12/2016 07:32:36: # Action "train"                                                             #
MPI Rank 0: 07/12/2016 07:32:36: #                                                                            #
MPI Rank 0: 07/12/2016 07:32:36: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:36: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:39: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:39: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:39: Training criterion node(s):
MPI Rank 0: 07/12/2016 07:32:39: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:39: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:39: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0000004EA6AFAF10: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0000004EA6AFAFE0: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0000004EA6AFB0B0: {[B1 Value[512 x 1]] }
MPI Rank 0: 0000004EA6AFB180: {[W1 Value[512 x 512]] }
MPI Rank 0: 0000004EA6AFB3F0: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0000004EA6AFB590: {[W0 Value[512 x 363]] }
MPI Rank 0: 0000004EA6AFB660: {[features Value[363 x *]] }
MPI Rank 0: 0000004EA6AFB730: {[B0 Value[512 x 1]] }
MPI Rank 0: 0000004EA6AFB800: {[labels Value[132 x *]] }
MPI Rank 0: 0000004EA6AFB8D0: {[Prior Value[132]] }
MPI Rank 0: 0000004EA6AFBA70: {[B2 Value[132 x 1]] }
MPI Rank 0: 0000004EA6AFBC10: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0000004EA6AFBCE0: {[W2 Value[132 x 512]] }
MPI Rank 0: 0000004EA6AFBDB0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0000004EA84CDE70: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0000004EA84CDF40: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0000004EA84CE0E0: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0000004EA84CE1B0: {[LogOfPrior Value[132]] }
MPI Rank 0: 0000004EA84CE280: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0000004EA84CE4F0: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0000004EA84CE690: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 0000004EA84CE760: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0000004EA84CE9D0: {[W0*features Value[512 x *]] }
MPI Rank 0: 0000004EA84CF390: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0000004EA84CF600: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0000004EA84CF6D0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0000004EA84CF870: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0000004EA84CF940: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:39: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:32:39: 	MeanOfFeatures = Mean()
MPI Rank 0: 07/12/2016 07:32:39: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 07/12/2016 07:32:39: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:33:42: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:33:42: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:33:42: Starting minibatch loop.
MPI Rank 0: 07/12/2016 07:33:43:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.62249733 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 1.1313s; samplesPerSecond = 169.7
MPI Rank 0: 07/12/2016 07:33:44:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.54870284 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 1.1834s; samplesPerSecond = 162.2
MPI Rank 0: 07/12/2016 07:33:46:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.49153371 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 1.1763s; samplesPerSecond = 163.2
MPI Rank 0: 07/12/2016 07:33:47:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.74853216 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 1.2001s; samplesPerSecond = 160.0
MPI Rank 0: 07/12/2016 07:33:48:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.35853775 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 1.2097s; samplesPerSecond = 158.7
MPI Rank 0: 07/12/2016 07:33:49:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.18364264 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 1.2021s; samplesPerSecond = 159.7
MPI Rank 0: 07/12/2016 07:33:50:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.07377062 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 1.1971s; samplesPerSecond = 160.4
MPI Rank 0: 07/12/2016 07:33:52:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.11217034 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 1.2042s; samplesPerSecond = 159.4
MPI Rank 0: 07/12/2016 07:33:53:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.11277714 * 192; EvalErrorPrediction = 0.93750000 * 192; time = 1.1903s; samplesPerSecond = 161.3
MPI Rank 0: 07/12/2016 07:33:54:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.94240248 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 1.2029s; samplesPerSecond = 159.6
MPI Rank 0: 07/12/2016 07:33:55:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.91075300 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.7775s; samplesPerSecond = 246.9
MPI Rank 0: 07/12/2016 07:33:56:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.80243160 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.6737s; samplesPerSecond = 285.0
MPI Rank 0: 07/12/2016 07:33:56:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.77773020 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.6752s; samplesPerSecond = 284.4
MPI Rank 0: 07/12/2016 07:33:57:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 4.00021242 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 1.1152s; samplesPerSecond = 172.2
MPI Rank 0: 07/12/2016 07:33:59:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.66297389 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 1.1845s; samplesPerSecond = 162.1
MPI Rank 0: 07/12/2016 07:34:00:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.73427123 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 1.2330s; samplesPerSecond = 155.7
MPI Rank 0: 07/12/2016 07:34:01:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.96544954 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 1.1610s; samplesPerSecond = 165.4
MPI Rank 0: 07/12/2016 07:34:02:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.70881284 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 1.1929s; samplesPerSecond = 160.9
MPI Rank 0: 07/12/2016 07:34:03:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.75634093 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 1.1791s; samplesPerSecond = 162.8
MPI Rank 0: 07/12/2016 07:34:04:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.73725947 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.8987s; samplesPerSecond = 213.6
MPI Rank 0: 07/12/2016 07:34:05:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.85682229 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.6264s; samplesPerSecond = 306.5
MPI Rank 0: 07/12/2016 07:34:05:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.38038231 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6255s; samplesPerSecond = 306.9
MPI Rank 0: 07/12/2016 07:34:06:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.51989665 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.6234s; samplesPerSecond = 308.0
MPI Rank 0: 07/12/2016 07:34:07:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.48547553 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 1.0089s; samplesPerSecond = 190.3
MPI Rank 0: 07/12/2016 07:34:08:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.47889736 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 1.1884s; samplesPerSecond = 161.6
MPI Rank 0: 07/12/2016 07:34:09:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.46249340 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 1.1918s; samplesPerSecond = 161.1
MPI Rank 0: 07/12/2016 07:34:11:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.29533745 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 1.1926s; samplesPerSecond = 161.0
MPI Rank 0: 07/12/2016 07:34:12:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.39209019 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 1.1831s; samplesPerSecond = 162.3
MPI Rank 0: 07/12/2016 07:34:12:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.47813562 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.6022s; samplesPerSecond = 318.8
MPI Rank 0: 07/12/2016 07:34:13:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.16151890 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.6192s; samplesPerSecond = 310.1
MPI Rank 0: 07/12/2016 07:34:14:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.39621909 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.6497s; samplesPerSecond = 295.5
MPI Rank 0: 07/12/2016 07:34:14:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.33703124 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.6521s; samplesPerSecond = 294.4
MPI Rank 0: 07/12/2016 07:34:15:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.24453187 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.6461s; samplesPerSecond = 297.2
MPI Rank 0: 07/12/2016 07:34:16:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.40063683 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6466s; samplesPerSecond = 297.0
MPI Rank 0: 07/12/2016 07:34:16:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.14840574 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.6497s; samplesPerSecond = 295.5
MPI Rank 0: 07/12/2016 07:34:17:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.14962130 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.6682s; samplesPerSecond = 287.3
MPI Rank 0: 07/12/2016 07:34:18:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 2.97076399 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.6522s; samplesPerSecond = 294.4
MPI Rank 0: 07/12/2016 07:34:18:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.05600545 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.6463s; samplesPerSecond = 297.1
MPI Rank 0: 07/12/2016 07:34:19:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.21316734 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.6518s; samplesPerSecond = 294.6
MPI Rank 0: 07/12/2016 07:34:20:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.16140911 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.6440s; samplesPerSecond = 298.1
MPI Rank 0: 07/12/2016 07:34:20:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.20391372 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.6640s; samplesPerSecond = 289.1
MPI Rank 0: 07/12/2016 07:34:21:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.24681279 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.6319s; samplesPerSecond = 303.9
MPI Rank 0: 07/12/2016 07:34:22:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.23909469 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6720s; samplesPerSecond = 285.7
MPI Rank 0: 07/12/2016 07:34:22:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.22012658 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6284s; samplesPerSecond = 305.5
MPI Rank 0: 07/12/2016 07:34:23:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.00907725 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.6530s; samplesPerSecond = 294.0
MPI Rank 0: 07/12/2016 07:34:23:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 2.90429838 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.6453s; samplesPerSecond = 297.5
MPI Rank 0: 07/12/2016 07:34:24:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.17866673 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.6541s; samplesPerSecond = 293.5
MPI Rank 0: 07/12/2016 07:34:25:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.14253746 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.6472s; samplesPerSecond = 296.7
MPI Rank 0: 07/12/2016 07:34:25:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.00467402 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.6501s; samplesPerSecond = 295.3
MPI Rank 0: 07/12/2016 07:34:26:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.77073223 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.6480s; samplesPerSecond = 296.3
MPI Rank 0: 07/12/2016 07:34:27:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.79758550 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.6725s; samplesPerSecond = 285.5
MPI Rank 0: 07/12/2016 07:34:27:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.07318492 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.6458s; samplesPerSecond = 297.3
MPI Rank 0: 07/12/2016 07:34:28:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.89921148 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.6518s; samplesPerSecond = 294.6
MPI Rank 0: 07/12/2016 07:34:29:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.90629584 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.6458s; samplesPerSecond = 297.3
MPI Rank 0: 07/12/2016 07:34:29:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.02085374 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.6495s; samplesPerSecond = 295.6
MPI Rank 0: 07/12/2016 07:34:30:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.82298971 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.6480s; samplesPerSecond = 296.3
MPI Rank 0: 07/12/2016 07:34:31:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.89974420 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.6500s; samplesPerSecond = 295.4
MPI Rank 0: 07/12/2016 07:34:31:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.71147198 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.6457s; samplesPerSecond = 297.4
MPI Rank 0: 07/12/2016 07:34:32:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.69035774 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.6499s; samplesPerSecond = 295.4
MPI Rank 0: 07/12/2016 07:34:33:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75894494 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.6476s; samplesPerSecond = 296.5
MPI Rank 0: 07/12/2016 07:34:33:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.83851556 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.6584s; samplesPerSecond = 291.6
MPI Rank 0: 07/12/2016 07:34:34:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.74261836 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.6392s; samplesPerSecond = 300.4
MPI Rank 0: 07/12/2016 07:34:35:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.84826760 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.6499s; samplesPerSecond = 295.4
MPI Rank 0: 07/12/2016 07:34:35:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.85604481 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.6491s; samplesPerSecond = 295.8
MPI Rank 0: 07/12/2016 07:34:36:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.59533592 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6513s; samplesPerSecond = 294.8
MPI Rank 0: 07/12/2016 07:34:36:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.78456949 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.6411s; samplesPerSecond = 299.5
MPI Rank 0: 07/12/2016 07:34:37:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.42054281 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.9311s; samplesPerSecond = 206.2
MPI Rank 0: 07/12/2016 07:34:38:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.60959584 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.7117s; samplesPerSecond = 269.8
MPI Rank 0: 07/12/2016 07:34:39:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.78264298 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 1.1001s; samplesPerSecond = 174.5
MPI Rank 0: 07/12/2016 07:34:40:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 3.02468536 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 1.1608s; samplesPerSecond = 165.4
MPI Rank 0: 07/12/2016 07:34:42:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.60810017 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 1.1860s; samplesPerSecond = 161.9
MPI Rank 0: 07/12/2016 07:34:43:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.70548993 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 1.1926s; samplesPerSecond = 161.0
MPI Rank 0: 07/12/2016 07:34:44:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.60734157 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 1.1887s; samplesPerSecond = 161.5
MPI Rank 0: 07/12/2016 07:34:45:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.53903001 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 1.1935s; samplesPerSecond = 160.9
MPI Rank 0: 07/12/2016 07:34:46:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.52654571 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 1.1917s; samplesPerSecond = 161.1
MPI Rank 0: 07/12/2016 07:34:48:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.56571084 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 1.3808s; samplesPerSecond = 139.0
MPI Rank 0: 07/12/2016 07:34:49:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.49596375 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.1923s; samplesPerSecond = 161.0
MPI Rank 0: 07/12/2016 07:34:50:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.33151583 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 1.1910s; samplesPerSecond = 161.2
MPI Rank 0: 07/12/2016 07:34:51:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.32392102 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 1.1832s; samplesPerSecond = 162.3
MPI Rank 0: 07/12/2016 07:34:52:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.36831650 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 1.1906s; samplesPerSecond = 161.3
MPI Rank 0: 07/12/2016 07:34:54:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.30762916 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.1864s; samplesPerSecond = 161.8
MPI Rank 0: 07/12/2016 07:34:55:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.37013885 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.2078s; samplesPerSecond = 159.0
MPI Rank 0: 07/12/2016 07:34:56:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.41954691 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 1.1981s; samplesPerSecond = 160.3
MPI Rank 0: 07/12/2016 07:34:57:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.41607395 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 1.2030s; samplesPerSecond = 159.6
MPI Rank 0: 07/12/2016 07:34:58:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.32404226 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 1.1886s; samplesPerSecond = 161.5
MPI Rank 0: 07/12/2016 07:35:00:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.38822272 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.1941s; samplesPerSecond = 160.8
MPI Rank 0: 07/12/2016 07:35:00:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.35575825 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.7988s; samplesPerSecond = 240.4
MPI Rank 0: 07/12/2016 07:35:01:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.52523183 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.6736s; samplesPerSecond = 285.0
MPI Rank 0: 07/12/2016 07:35:02:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.50472478 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6976s; samplesPerSecond = 275.2
MPI Rank 0: 07/12/2016 07:35:02:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.53743489 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.6744s; samplesPerSecond = 284.7
MPI Rank 0: 07/12/2016 07:35:03:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.47654707 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6743s; samplesPerSecond = 284.7
MPI Rank 0: 07/12/2016 07:35:04:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.32524820 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.7077s; samplesPerSecond = 271.3
MPI Rank 0: 07/12/2016 07:35:05:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.13924851 * 192; EvalErrorPrediction = 0.56770833 * 192; time = 1.0420s; samplesPerSecond = 184.3
MPI Rank 0: 07/12/2016 07:35:06:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.20977267 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 1.2136s; samplesPerSecond = 158.2
MPI Rank 0: 07/12/2016 07:35:07:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.26235079 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.3702s; samplesPerSecond = 140.1
MPI Rank 0: 07/12/2016 07:35:09:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.11716647 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 1.1918s; samplesPerSecond = 161.1
MPI Rank 0: 07/12/2016 07:35:10:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.34585900 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 1.1921s; samplesPerSecond = 161.1
MPI Rank 0: 07/12/2016 07:35:11:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.33004096 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 1.1864s; samplesPerSecond = 161.8
MPI Rank 0: 07/12/2016 07:35:12:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.23086997 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 1.2154s; samplesPerSecond = 158.0
MPI Rank 0: 07/12/2016 07:35:13:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.01192627 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 1.2093s; samplesPerSecond = 158.8
MPI Rank 0: 07/12/2016 07:35:15:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.19413942 * 192; EvalErrorPrediction = 0.56770833 * 192; time = 1.1983s; samplesPerSecond = 160.2
MPI Rank 0: 07/12/2016 07:35:16:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.37970006 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 1.1833s; samplesPerSecond = 162.3
MPI Rank 0: 07/12/2016 07:35:17:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.20843556 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 1.2129s; samplesPerSecond = 158.3
MPI Rank 0: 07/12/2016 07:35:18:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.21410288 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 1.2122s; samplesPerSecond = 158.4
MPI Rank 0: 07/12/2016 07:35:20:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.26890894 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 1.2889s; samplesPerSecond = 149.0
MPI Rank 0: 07/12/2016 07:35:20:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.26214334 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.8467s; samplesPerSecond = 226.8
MPI Rank 0: 07/12/2016 07:35:21: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.01459593 * 20480; EvalErrorPrediction = 0.72973633 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=98.7102s
MPI Rank 0: 07/12/2016 07:35:32: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:35:33: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:35:33: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/12/2016 07:35:33:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.11504764 * 535; EvalErrorPrediction = 0.57943925 * 535; time = 0.9453s; samplesPerSecond = 566.0
MPI Rank 0: 07/12/2016 07:35:35:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.08325707 * 576; EvalErrorPrediction = 0.55555556 * 576; time = 1.0165s; samplesPerSecond = 566.6
MPI Rank 0: 07/12/2016 07:35:35:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.08387370 * 535; EvalErrorPrediction = 0.58130841 * 535; time = 0.9722s; samplesPerSecond = 550.3
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 3.73-seconds latency this time; accumulated time on sync point = 3.73 seconds , average latency = 3.73 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     7.73 seconds since last report (0.02 seconds on comm.); 4330 samples processed by 2 workers (2213 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 0.56k samplesPerSecond , throughputPerWorker = 0.28k samplesPerSecond
MPI Rank 0: 07/12/2016 07:35:40:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 1.97729770 * 567; EvalErrorPrediction = 0.55202822 * 567; time = 4.7657s; samplesPerSecond = 119.0
MPI Rank 0: 07/12/2016 07:35:41:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.01499267 * 562; EvalErrorPrediction = 0.53558719 * 562; time = 1.1122s; samplesPerSecond = 505.3
MPI Rank 0: 07/12/2016 07:35:43:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 1.97129059 * 522; EvalErrorPrediction = 0.53639847 * 522; time = 1.3619s; samplesPerSecond = 383.3
MPI Rank 0: 07/12/2016 07:35:45:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.98351574 * 561; EvalErrorPrediction = 0.51871658 * 561; time = 2.3209s; samplesPerSecond = 241.7
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 1.44-seconds latency this time; accumulated time on sync point = 5.17 seconds , average latency = 2.59 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     8.47 seconds since last report (0.00 seconds on comm.); 4269 samples processed by 2 workers (2192 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 0.50k samplesPerSecond , throughputPerWorker = 0.25k samplesPerSecond
MPI Rank 0: 07/12/2016 07:35:49:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.97327360 * 547; EvalErrorPrediction = 0.56489945 * 547; time = 3.6773s; samplesPerSecond = 148.8
MPI Rank 0: 07/12/2016 07:35:50:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.00673837 * 551; EvalErrorPrediction = 0.54990926 * 551; time = 1.0911s; samplesPerSecond = 505.0
MPI Rank 0: 07/12/2016 07:35:51:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.97127574 * 535; EvalErrorPrediction = 0.53457944 * 535; time = 1.0724s; samplesPerSecond = 498.9
MPI Rank 0: 07/12/2016 07:35:52:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.00160383 * 557; EvalErrorPrediction = 0.52962298 * 557; time = 1.1387s; samplesPerSecond = 489.2
MPI Rank 0: 07/12/2016 07:35:55:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.05007133 * 541; EvalErrorPrediction = 0.55083179 * 541; time = 2.9773s; samplesPerSecond = 181.7
MPI Rank 0: 07/12/2016 07:35:56:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.04334570 * 529; EvalErrorPrediction = 0.57466919 * 529; time = 0.8516s; samplesPerSecond = 621.2
MPI Rank 0: 07/12/2016 07:35:57:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.99128393 * 525; EvalErrorPrediction = 0.54095238 * 525; time = 0.8564s; samplesPerSecond = 613.0
MPI Rank 0: 07/12/2016 07:35:58:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.92555563 * 534; EvalErrorPrediction = 0.49812734 * 534; time = 0.8677s; samplesPerSecond = 615.4
MPI Rank 0: 07/12/2016 07:35:58:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.89280514 * 537; EvalErrorPrediction = 0.52513966 * 537; time = 0.8598s; samplesPerSecond = 624.6
MPI Rank 0: 07/12/2016 07:35:59:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.99740408 * 528; EvalErrorPrediction = 0.56060606 * 528; time = 0.8612s; samplesPerSecond = 613.1
MPI Rank 0: 07/12/2016 07:36:00:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.95969795 * 529; EvalErrorPrediction = 0.53686200 * 529; time = 0.8508s; samplesPerSecond = 621.8
MPI Rank 0: 07/12/2016 07:36:01:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.05570743 * 549; EvalErrorPrediction = 0.53187614 * 549; time = 0.8684s; samplesPerSecond = 632.2
MPI Rank 0: 07/12/2016 07:36:02:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.87991636 * 553; EvalErrorPrediction = 0.51356239 * 553; time = 0.8749s; samplesPerSecond = 632.1
MPI Rank 0: 07/12/2016 07:36:03:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.98344005 * 533; EvalErrorPrediction = 0.53658537 * 533; time = 0.8605s; samplesPerSecond = 619.4
MPI Rank 0: 07/12/2016 07:36:04:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.81796360 * 550; EvalErrorPrediction = 0.49454545 * 550; time = 0.8701s; samplesPerSecond = 632.1
MPI Rank 0: 07/12/2016 07:36:05:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.97607204 * 544; EvalErrorPrediction = 0.54779412 * 544; time = 0.8771s; samplesPerSecond = 620.2
MPI Rank 0: 07/12/2016 07:36:05:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.00668021 * 531; EvalErrorPrediction = 0.56120527 * 531; time = 0.8712s; samplesPerSecond = 609.5
MPI Rank 0: 07/12/2016 07:36:06:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.89482010 * 539; EvalErrorPrediction = 0.50834879 * 539; time = 0.8715s; samplesPerSecond = 618.5
MPI Rank 0: 07/12/2016 07:36:07:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.84715470 * 533; EvalErrorPrediction = 0.51031895 * 533; time = 0.8553s; samplesPerSecond = 623.2
MPI Rank 0: 07/12/2016 07:36:08:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.93572433 * 371; EvalErrorPrediction = 0.52830189 * 371; time = 0.5614s; samplesPerSecond = 660.9
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 5.17 seconds , average latency = 1.72 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:    18.98 seconds since last report (0.02 seconds on comm.); 11881 samples processed by 2 workers (10069 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 0.63k samplesPerSecond , throughputPerWorker = 0.31k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:08: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00976085 * 20480; EvalErrorPrediction = 0.54946289 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=35.1839s
MPI Rank 0: 07/12/2016 07:36:08: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:36:08: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:36:08: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.52-seconds latency this time; accumulated time on sync point = 0.52 seconds , average latency = 0.52 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.82 seconds since last report (0.00 seconds on comm.); 4271 samples processed by 2 workers (2127 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 1.51k samplesPerSecond , throughputPerWorker = 0.76k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:11:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.93804436 * 2127; EvalErrorPrediction = 0.54301834 * 2127; time = 2.7380s; samplesPerSecond = 776.8
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.52 seconds , average latency = 0.26 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     3.02 seconds since last report (0.00 seconds on comm.); 4365 samples processed by 2 workers (2179 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 1.45k samplesPerSecond , throughputPerWorker = 0.72k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:14:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.89701395 * 2179; EvalErrorPrediction = 0.53648463 * 2179; time = 3.0192s; samplesPerSecond = 721.7
MPI Rank 0: 07/12/2016 07:36:17:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89531988 * 2170; EvalErrorPrediction = 0.52811060 * 2170; time = 2.9763s; samplesPerSecond = 729.1
MPI Rank 0: 07/12/2016 07:36:19:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.90867534 * 2124; EvalErrorPrediction = 0.52730697 * 2124; time = 2.0891s; samplesPerSecond = 1016.7
MPI Rank 0: 07/12/2016 07:36:21:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.86592662 * 2120; EvalErrorPrediction = 0.51037736 * 2120; time = 2.0518s; samplesPerSecond = 1033.3
MPI Rank 0: 07/12/2016 07:36:23:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.86013016 * 2132; EvalErrorPrediction = 0.52298311 * 2132; time = 2.0593s; samplesPerSecond = 1035.3
MPI Rank 0: 07/12/2016 07:36:24:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88144247 * 1422; EvalErrorPrediction = 0.53727145 * 1422; time = 1.3056s; samplesPerSecond = 1089.2
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.52 seconds , average latency = 0.17 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:    10.51 seconds since last report (0.01 seconds on comm.); 11844 samples processed by 2 workers (9968 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 1.13k samplesPerSecond , throughputPerWorker = 0.56k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:24: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.91079569 * 20480; EvalErrorPrediction = 0.53164062 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=16.3493s
MPI Rank 0: 07/12/2016 07:36:25: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:36:25: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:36:25: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.65-seconds latency this time; accumulated time on sync point = 0.65 seconds , average latency = 0.65 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     3.06 seconds since last report (0.00 seconds on comm.); 4335 samples processed by 2 workers (2151 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 1.42k samplesPerSecond , throughputPerWorker = 0.71k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:28:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.88778502 * 2151; EvalErrorPrediction = 0.52533705 * 2151; time = 2.9739s; samplesPerSecond = 723.3
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.66-seconds latency this time; accumulated time on sync point = 1.31 seconds , average latency = 0.66 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     3.10 seconds since last report (0.00 seconds on comm.); 4432 samples processed by 2 workers (2120 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 1.43k samplesPerSecond , throughputPerWorker = 0.71k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:31:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88801505 * 2120; EvalErrorPrediction = 0.53490566 * 2120; time = 3.1016s; samplesPerSecond = 683.5
MPI Rank 0: 07/12/2016 07:36:34:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.88370667 * 2101; EvalErrorPrediction = 0.52784388 * 2101; time = 2.9492s; samplesPerSecond = 712.4
MPI Rank 0: 07/12/2016 07:36:36:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.86382941 * 2045; EvalErrorPrediction = 0.51491443 * 2045; time = 2.0038s; samplesPerSecond = 1020.6
MPI Rank 0: 07/12/2016 07:36:38:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.90115712 * 2111; EvalErrorPrediction = 0.52486973 * 2111; time = 2.0475s; samplesPerSecond = 1031.0
MPI Rank 0: 07/12/2016 07:36:40:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.85185139 * 2053; EvalErrorPrediction = 0.51485631 * 2053; time = 2.0149s; samplesPerSecond = 1018.9
MPI Rank 0: 07/12/2016 07:36:41:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86397864 * 1461; EvalErrorPrediction = 0.51197810 * 1461; time = 1.3432s; samplesPerSecond = 1087.7
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 1.31 seconds , average latency = 0.44 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:    10.38 seconds since last report (0.00 seconds on comm.); 11713 samples processed by 2 workers (9771 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 1.13k samplesPerSecond , throughputPerWorker = 0.56k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:41: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.88416143 * 20480; EvalErrorPrediction = 0.52421875 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=16.5441s
MPI Rank 0: 07/12/2016 07:36:42: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:36:42: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:36:42: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.19-seconds latency this time; accumulated time on sync point = 0.19 seconds , average latency = 0.19 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     3.44 seconds since last report (0.00 seconds on comm.); 4404 samples processed by 2 workers (2103 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 1.28k samplesPerSecond , throughputPerWorker = 0.64k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:45:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.85748245 * 2103; EvalErrorPrediction = 0.50689491 * 2103; time = 3.3594s; samplesPerSecond = 626.0
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.23 seconds , average latency = 0.12 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     3.17 seconds since last report (0.00 seconds on comm.); 4390 samples processed by 2 workers (2067 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 1.38k samplesPerSecond , throughputPerWorker = 0.69k samplesPerSecond
MPI Rank 0: 07/12/2016 07:36:48:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.82361641 * 2067; EvalErrorPrediction = 0.49298500 * 2067; time = 3.1713s; samplesPerSecond = 651.8
MPI Rank 0: 07/12/2016 07:36:52:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.83820441 * 2088; EvalErrorPrediction = 0.50047893 * 2088; time = 3.8583s; samplesPerSecond = 541.2
MPI Rank 0: 07/12/2016 07:36:54:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.82559975 * 2081; EvalErrorPrediction = 0.50552619 * 2081; time = 2.0302s; samplesPerSecond = 1025.0
MPI Rank 0: 07/12/2016 07:36:56:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.83142160 * 2068; EvalErrorPrediction = 0.52127660 * 2068; time = 2.0143s; samplesPerSecond = 1026.7
MPI Rank 0: 07/12/2016 07:36:58:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.81909301 * 2070; EvalErrorPrediction = 0.49420290 * 2070; time = 2.0401s; samplesPerSecond = 1014.6
MPI Rank 0: 07/12/2016 07:37:00:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.82849572 * 1433; EvalErrorPrediction = 0.49755757 * 1433; time = 1.3122s; samplesPerSecond = 1092.1
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.23 seconds , average latency = 0.08 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:    11.32 seconds since last report (0.04 seconds on comm.); 11686 samples processed by 2 workers (9740 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 1.03k samplesPerSecond , throughputPerWorker = 0.52k samplesPerSecond
MPI Rank 0: 07/12/2016 07:37:00: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.84819153 * 20480; EvalErrorPrediction = 0.50664062 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=17.9435s
MPI Rank 0: 07/12/2016 07:37:00: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 07/12/2016 07:37:00: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:00: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 07/12/2016 07:37:00: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 07/12/2016 07:32:36: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr_speechTrain.logrank1
MPI Rank 1: 07/12/2016 07:32:36: -------------------------------------------------------------------
MPI Rank 1: 07/12/2016 07:32:36: Build info: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:36: 		Built time: Jul 12 2016 06:45:36
MPI Rank 1: 07/12/2016 07:32:36: 		Last modified date: Fri Jul  8 10:29:45 2016
MPI Rank 1: 07/12/2016 07:32:36: 		Build type: Debug
MPI Rank 1: 07/12/2016 07:32:36: 		Build target: GPU
MPI Rank 1: 07/12/2016 07:32:36: 		With 1bit-SGD: no
MPI Rank 1: 07/12/2016 07:32:36: 		Math lib: mkl
MPI Rank 1: 07/12/2016 07:32:36: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 1: 07/12/2016 07:32:36: 		CUB_PATH: C:\src\cub-1.4.1
MPI Rank 1: 07/12/2016 07:32:36: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 1: 07/12/2016 07:32:36: 		Build Branch: HEAD
MPI Rank 1: 07/12/2016 07:32:36: 		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
MPI Rank 1: 07/12/2016 07:32:36: 		Built by svcphil on LIANA-09-w
MPI Rank 1: 07/12/2016 07:32:36: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 1: 07/12/2016 07:32:36: -------------------------------------------------------------------
MPI Rank 1: 07/12/2016 07:32:37: -------------------------------------------------------------------
MPI Rank 1: 07/12/2016 07:32:37: GPU info:
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 1: 07/12/2016 07:32:37: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: Running on cntk-muc00 at 2016/07/12 07:32:37
MPI Rank 1: 07/12/2016 07:32:37: Command line: 
MPI Rank 1: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/12/2016 07:32:37: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/12/2016 07:32:37: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 1: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 07/12/2016 07:32:37: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 07/12/2016 07:32:37: Commands: speechTrain
MPI Rank 1: 07/12/2016 07:32:37: Precision = "double"
MPI Rank 1: 07/12/2016 07:32:37: Using 2 CPU threads.
MPI Rank 1: 07/12/2016 07:32:37: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712072724.748460\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn
MPI Rank 1: 07/12/2016 07:32:37: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 07/12/2016 07:32:37: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: ##############################################################################
MPI Rank 1: 07/12/2016 07:32:37: #                                                                            #
MPI Rank 1: 07/12/2016 07:32:37: # Action "train"                                                             #
MPI Rank 1: 07/12/2016 07:32:37: #                                                                            #
MPI Rank 1: 07/12/2016 07:32:37: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:37: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:39: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:39: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:39: Training criterion node(s):
MPI Rank 1: 07/12/2016 07:32:39: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:39: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:39: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 000000A5B8B1D830: {[W1 Value[512 x 512]] }
MPI Rank 1: 000000A5B8B1D900: {[W0 Value[512 x 363]] }
MPI Rank 1: 000000A5B8B1D9D0: {[B2 Value[132 x 1]] }
MPI Rank 1: 000000A5B8B1DAA0: {[labels Value[132 x *]] }
MPI Rank 1: 000000A5B8B1DC40: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 000000A5B8B1DD10: {[features Value[363 x *]] }
MPI Rank 1: 000000A5B8B1DDE0: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 000000A5B8B1DEB0: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 000000A5B8B1E050: {[B0 Value[512 x 1]] }
MPI Rank 1: 000000A5B8B1E120: {[B1 Value[512 x 1]] }
MPI Rank 1: 000000A5B8B1E1F0: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 000000A5B8B1E390: {[Prior Value[132]] }
MPI Rank 1: 000000A5B8B1E460: {[W2 Value[132 x 512]] }
MPI Rank 1: 000000A5B8B1E530: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 000000A5B8B2BDE0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 000000A5B8B2BF80: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 000000A5B8B2C050: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 000000A5B8B2C7A0: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 000000A5B8B2C870: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 000000A5B8B2C940: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 000000A5B8B2CA10: {[W0*features Value[512 x *]] }
MPI Rank 1: 000000A5B8B2CAE0: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 000000A5B8B2CBB0: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 000000A5B8B2CD50: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 000000A5B8B2D710: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 000000A5B8B2D7E0: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 000000A5B8B2DA50: {[LogOfPrior Value[132]] }
MPI Rank 1: 000000A5B8B2DB20: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:39: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:32:39: 	MeanOfFeatures = Mean()
MPI Rank 1: 07/12/2016 07:32:39: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 07/12/2016 07:32:39: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:33:42: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:33:42: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:33:42: Starting minibatch loop.
MPI Rank 1: 07/12/2016 07:33:43:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.62249733 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.9656s; samplesPerSecond = 198.8
MPI Rank 1: 07/12/2016 07:33:44:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.54870284 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 1.1732s; samplesPerSecond = 163.7
MPI Rank 1: 07/12/2016 07:33:45:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.49153371 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 1.1826s; samplesPerSecond = 162.4
MPI Rank 1: 07/12/2016 07:33:47:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.74853216 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 1.1766s; samplesPerSecond = 163.2
MPI Rank 1: 07/12/2016 07:33:48:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.35853775 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 1.1959s; samplesPerSecond = 160.6
MPI Rank 1: 07/12/2016 07:33:49:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.18364264 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 1.1924s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:33:50:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.07377062 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 1.1930s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:33:51:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.11217034 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 1.1940s; samplesPerSecond = 160.8
MPI Rank 1: 07/12/2016 07:33:53:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.11277714 * 192; EvalErrorPrediction = 0.93750000 * 192; time = 1.1933s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:33:54:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.94240248 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 1.1937s; samplesPerSecond = 160.8
MPI Rank 1: 07/12/2016 07:33:55:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.91075300 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.8477s; samplesPerSecond = 226.5
MPI Rank 1: 07/12/2016 07:33:55:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.80243160 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.6742s; samplesPerSecond = 284.8
MPI Rank 1: 07/12/2016 07:33:56:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.77773020 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.6749s; samplesPerSecond = 284.5
MPI Rank 1: 07/12/2016 07:33:57:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 4.00021242 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 1.0427s; samplesPerSecond = 184.1
MPI Rank 1: 07/12/2016 07:33:58:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.66297389 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 1.1928s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:33:59:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.73427123 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 1.1932s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:34:01:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.96544954 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 1.1924s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:34:02:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.70881284 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 1.1945s; samplesPerSecond = 160.7
MPI Rank 1: 07/12/2016 07:34:03:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.75634093 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 1.1936s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:34:04:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.73725947 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 1.0148s; samplesPerSecond = 189.2
MPI Rank 1: 07/12/2016 07:34:05:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.85682229 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.5964s; samplesPerSecond = 321.9
MPI Rank 1: 07/12/2016 07:34:06:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.38038231 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 1.2141s; samplesPerSecond = 158.1
MPI Rank 1: 07/12/2016 07:34:07:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.51989665 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 1.3594s; samplesPerSecond = 141.2
MPI Rank 1: 07/12/2016 07:34:08:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.48547553 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 1.1915s; samplesPerSecond = 161.1
MPI Rank 1: 07/12/2016 07:34:10:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.47889736 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 1.1919s; samplesPerSecond = 161.1
MPI Rank 1: 07/12/2016 07:34:11:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.46249340 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 1.1926s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:34:12:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.29533745 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 1.2517s; samplesPerSecond = 153.4
MPI Rank 1: 07/12/2016 07:34:13:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.39209019 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.7127s; samplesPerSecond = 269.4
MPI Rank 1: 07/12/2016 07:34:14:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.47813562 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 1.3111s; samplesPerSecond = 146.4
MPI Rank 1: 07/12/2016 07:34:15:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.16151890 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 1.2957s; samplesPerSecond = 148.2
MPI Rank 1: 07/12/2016 07:34:17:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.39621909 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 1.1142s; samplesPerSecond = 172.3
MPI Rank 1: 07/12/2016 07:34:18:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.33703124 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 1.2867s; samplesPerSecond = 149.2
MPI Rank 1: 07/12/2016 07:34:19:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.24453187 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 1.2965s; samplesPerSecond = 148.1
MPI Rank 1: 07/12/2016 07:34:20:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.40063683 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 1.2844s; samplesPerSecond = 149.5
MPI Rank 1: 07/12/2016 07:34:22:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.14840574 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 1.1750s; samplesPerSecond = 163.4
MPI Rank 1: 07/12/2016 07:34:23:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.14962130 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 1.4371s; samplesPerSecond = 133.6
MPI Rank 1: 07/12/2016 07:34:24:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 2.97076399 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 1.2985s; samplesPerSecond = 147.9
MPI Rank 1: 07/12/2016 07:34:26:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.05600545 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 1.3013s; samplesPerSecond = 147.5
MPI Rank 1: 07/12/2016 07:34:27:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.21316734 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 1.3194s; samplesPerSecond = 145.5
MPI Rank 1: 07/12/2016 07:34:28:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.16140911 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 1.2982s; samplesPerSecond = 147.9
MPI Rank 1: 07/12/2016 07:34:30:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.20391372 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 1.2972s; samplesPerSecond = 148.0
MPI Rank 1: 07/12/2016 07:34:31:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.24681279 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 1.2964s; samplesPerSecond = 148.1
MPI Rank 1: 07/12/2016 07:34:32:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.23909469 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 1.2983s; samplesPerSecond = 147.9
MPI Rank 1: 07/12/2016 07:34:33:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.22012658 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 1.2873s; samplesPerSecond = 149.1
MPI Rank 1: 07/12/2016 07:34:35:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.00907725 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 1.3096s; samplesPerSecond = 146.6
MPI Rank 1: 07/12/2016 07:34:36:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 2.90429838 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 1.2977s; samplesPerSecond = 148.0
MPI Rank 1: 07/12/2016 07:34:37:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.17866673 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 1.1207s; samplesPerSecond = 171.3
MPI Rank 1: 07/12/2016 07:34:38:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.14253746 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.7325s; samplesPerSecond = 262.1
MPI Rank 1: 07/12/2016 07:34:39:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.00467402 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 1.1232s; samplesPerSecond = 170.9
MPI Rank 1: 07/12/2016 07:34:40:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.77073223 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 1.1663s; samplesPerSecond = 164.6
MPI Rank 1: 07/12/2016 07:34:41:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.79758550 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 1.1869s; samplesPerSecond = 161.8
MPI Rank 1: 07/12/2016 07:34:43:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.07318492 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 1.1928s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:34:44:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.89921148 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 1.1918s; samplesPerSecond = 161.1
MPI Rank 1: 07/12/2016 07:34:45:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.90629584 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 1.1932s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:34:46:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.02085374 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 1.1927s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:34:47:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.82298971 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 1.0169s; samplesPerSecond = 188.8
MPI Rank 1: 07/12/2016 07:34:48:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.89974420 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 1.1932s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:34:50:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.71147198 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 1.1938s; samplesPerSecond = 160.8
MPI Rank 1: 07/12/2016 07:34:51:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.69035774 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 1.1924s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:34:52:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75894494 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 1.1633s; samplesPerSecond = 165.1
MPI Rank 1: 07/12/2016 07:34:53:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.83851556 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 1.1886s; samplesPerSecond = 161.5
MPI Rank 1: 07/12/2016 07:34:54:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.74261836 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 1.1872s; samplesPerSecond = 161.7
MPI Rank 1: 07/12/2016 07:34:55:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.84826760 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 1.1933s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:34:57:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.85604481 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 1.1948s; samplesPerSecond = 160.7
MPI Rank 1: 07/12/2016 07:34:58:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.59533592 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 1.1933s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:34:59:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.78456949 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 1.1933s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:35:00:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.42054281 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 1.0208s; samplesPerSecond = 188.1
MPI Rank 1: 07/12/2016 07:35:01:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.60959584 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6745s; samplesPerSecond = 284.6
MPI Rank 1: 07/12/2016 07:35:01:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.78264298 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.6742s; samplesPerSecond = 284.8
MPI Rank 1: 07/12/2016 07:35:02:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 3.02468536 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.6747s; samplesPerSecond = 284.6
MPI Rank 1: 07/12/2016 07:35:03:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.60810017 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.6747s; samplesPerSecond = 284.6
MPI Rank 1: 07/12/2016 07:35:03:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.70548993 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.6747s; samplesPerSecond = 284.6
MPI Rank 1: 07/12/2016 07:35:04:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.60734157 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.8827s; samplesPerSecond = 217.5
MPI Rank 1: 07/12/2016 07:35:05:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.53903001 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 1.1933s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:35:07:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.52654571 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 1.1938s; samplesPerSecond = 160.8
MPI Rank 1: 07/12/2016 07:35:08:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.56571084 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 1.0262s; samplesPerSecond = 187.1
MPI Rank 1: 07/12/2016 07:35:09:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.49596375 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.1947s; samplesPerSecond = 160.7
MPI Rank 1: 07/12/2016 07:35:10:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.33151583 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 1.1931s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:35:11:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.32392102 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 1.1867s; samplesPerSecond = 161.8
MPI Rank 1: 07/12/2016 07:35:12:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.36831650 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 1.1932s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:35:14:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.30762916 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.1926s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:35:15:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.37013885 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.1943s; samplesPerSecond = 160.8
MPI Rank 1: 07/12/2016 07:35:16:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.41954691 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 1.2029s; samplesPerSecond = 159.6
MPI Rank 1: 07/12/2016 07:35:17:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.41607395 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 1.1942s; samplesPerSecond = 160.8
MPI Rank 1: 07/12/2016 07:35:18:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.32404226 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 1.1927s; samplesPerSecond = 161.0
MPI Rank 1: 07/12/2016 07:35:20:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.38822272 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 1.1932s; samplesPerSecond = 160.9
MPI Rank 1: 07/12/2016 07:35:20:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.35575825 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.8412s; samplesPerSecond = 228.2
MPI Rank 1: 07/12/2016 07:35:21:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.52523183 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.6472s; samplesPerSecond = 296.6
MPI Rank 1: 07/12/2016 07:35:22:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.50472478 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.5938s; samplesPerSecond = 323.3
MPI Rank 1: 07/12/2016 07:35:22:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.53743489 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.5963s; samplesPerSecond = 322.0
MPI Rank 1: 07/12/2016 07:35:23:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.47654707 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6049s; samplesPerSecond = 317.4
MPI Rank 1: 07/12/2016 07:35:24:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.32524820 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.6036s; samplesPerSecond = 318.1
MPI Rank 1: 07/12/2016 07:35:24:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.13924851 * 192; EvalErrorPrediction = 0.56770833 * 192; time = 0.6141s; samplesPerSecond = 312.7
MPI Rank 1: 07/12/2016 07:35:25:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.20977267 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.6082s; samplesPerSecond = 315.7
MPI Rank 1: 07/12/2016 07:35:25:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.26235079 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.6000s; samplesPerSecond = 320.0
MPI Rank 1: 07/12/2016 07:35:26:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.11716647 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.5942s; samplesPerSecond = 323.1
MPI Rank 1: 07/12/2016 07:35:27:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.34585900 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.5944s; samplesPerSecond = 323.0
MPI Rank 1: 07/12/2016 07:35:27:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.33004096 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.5952s; samplesPerSecond = 322.6
MPI Rank 1: 07/12/2016 07:35:28:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.23086997 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.5944s; samplesPerSecond = 323.0
MPI Rank 1: 07/12/2016 07:35:28:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.01192627 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.5938s; samplesPerSecond = 323.3
MPI Rank 1: 07/12/2016 07:35:29:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.19413942 * 192; EvalErrorPrediction = 0.56770833 * 192; time = 0.5942s; samplesPerSecond = 323.1
MPI Rank 1: 07/12/2016 07:35:30:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.37970006 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.5947s; samplesPerSecond = 322.8
MPI Rank 1: 07/12/2016 07:35:30:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.20843556 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.5949s; samplesPerSecond = 322.8
MPI Rank 1: 07/12/2016 07:35:31:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.21410288 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.5979s; samplesPerSecond = 321.1
MPI Rank 1: 07/12/2016 07:35:31:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.26890894 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.5952s; samplesPerSecond = 322.6
MPI Rank 1: 07/12/2016 07:35:32:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.26214334 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.6040s; samplesPerSecond = 317.9
MPI Rank 1: 07/12/2016 07:35:32: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.01459593 * 20480; EvalErrorPrediction = 0.72973633 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=110.151s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:35:33: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:35:33: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:35:34:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.32322192 * 233; EvalErrorPrediction = 0.60944206 * 233; time = 1.2018s; samplesPerSecond = 193.9
MPI Rank 1: 07/12/2016 07:35:35:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.26662698 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.9898s; samplesPerSecond = 194.0
MPI Rank 1: 07/12/2016 07:35:36:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.24403557 * 233; EvalErrorPrediction = 0.66523605 * 233; time = 1.0067s; samplesPerSecond = 231.4
MPI Rank 1: 07/12/2016 07:35:37:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.22501072 * 201; EvalErrorPrediction = 0.63184080 * 201; time = 0.9415s; samplesPerSecond = 213.5
MPI Rank 1: 07/12/2016 07:35:37:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.09509136 * 206; EvalErrorPrediction = 0.57766990 * 206; time = 0.6146s; samplesPerSecond = 335.2
MPI Rank 1: 07/12/2016 07:35:38:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.09124399 * 246; EvalErrorPrediction = 0.58130081 * 246; time = 0.6417s; samplesPerSecond = 383.3
MPI Rank 1: 07/12/2016 07:35:39:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.20963092 * 207; EvalErrorPrediction = 0.61835749 * 207; time = 0.6129s; samplesPerSecond = 337.8
MPI Rank 1: 07/12/2016 07:35:39:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.04959526 * 221; EvalErrorPrediction = 0.59276018 * 221; time = 0.6209s; samplesPerSecond = 356.0
MPI Rank 1: 07/12/2016 07:35:40:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.05198013 * 217; EvalErrorPrediction = 0.54377880 * 217; time = 0.6201s; samplesPerSecond = 349.9
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     7.75 seconds since last report (0.01 seconds on comm.); 4330 samples processed by 2 workers (2117 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 0.56k samplesPerSecond , throughputPerWorker = 0.28k samplesPerSecond
MPI Rank 1: 07/12/2016 07:35:40:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.23454085 * 233; EvalErrorPrediction = 0.60944206 * 233; time = 0.6927s; samplesPerSecond = 336.4
MPI Rank 1: 07/12/2016 07:35:42:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.17197252 * 211; EvalErrorPrediction = 0.59241706 * 211; time = 1.1153s; samplesPerSecond = 189.2
MPI Rank 1: 07/12/2016 07:35:42:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.00406486 * 227; EvalErrorPrediction = 0.54625551 * 227; time = 0.8935s; samplesPerSecond = 254.1
MPI Rank 1: 07/12/2016 07:35:44:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.02541602 * 239; EvalErrorPrediction = 0.53974895 * 239; time = 1.1177s; samplesPerSecond = 213.8
MPI Rank 1: 07/12/2016 07:35:45:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.80137617 * 243; EvalErrorPrediction = 0.49382716 * 243; time = 0.9448s; samplesPerSecond = 257.2
MPI Rank 1: 07/12/2016 07:35:46:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.94185175 * 234; EvalErrorPrediction = 0.54700855 * 234; time = 0.9594s; samplesPerSecond = 243.9
MPI Rank 1: 07/12/2016 07:35:47:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.22224809 * 231; EvalErrorPrediction = 0.62770563 * 231; time = 1.1598s; samplesPerSecond = 199.2
MPI Rank 1: 07/12/2016 07:35:48:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.06954611 * 240; EvalErrorPrediction = 0.57916667 * 240; time = 0.9773s; samplesPerSecond = 245.6
MPI Rank 1: 07/12/2016 07:35:48:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.27662703 * 239; EvalErrorPrediction = 0.61506276 * 239; time = 0.6354s; samplesPerSecond = 376.1
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     8.45 seconds since last report (0.00 seconds on comm.); 4269 samples processed by 2 workers (2077 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 0.51k samplesPerSecond , throughputPerWorker = 0.25k samplesPerSecond
MPI Rank 1: 07/12/2016 07:35:49:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.95381395 * 219; EvalErrorPrediction = 0.47945205 * 219; time = 0.6446s; samplesPerSecond = 339.7
MPI Rank 1: 07/12/2016 07:35:50:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.86537248 * 215; EvalErrorPrediction = 0.54418605 * 215; time = 0.7074s; samplesPerSecond = 303.9
MPI Rank 1: 07/12/2016 07:35:50:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.01331296 * 235; EvalErrorPrediction = 0.54468085 * 235; time = 0.7302s; samplesPerSecond = 321.8
MPI Rank 1: 07/12/2016 07:35:51:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.10679107 * 218; EvalErrorPrediction = 0.60550459 * 218; time = 0.7105s; samplesPerSecond = 306.8
MPI Rank 1: 07/12/2016 07:35:52:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.93884053 * 224; EvalErrorPrediction = 0.52232143 * 224; time = 0.7183s; samplesPerSecond = 311.8
MPI Rank 1: 07/12/2016 07:35:53:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.18554155 * 237; EvalErrorPrediction = 0.56540084 * 237; time = 0.7518s; samplesPerSecond = 315.2
MPI Rank 1: 07/12/2016 07:35:54:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.04742668 * 229; EvalErrorPrediction = 0.57205240 * 229; time = 1.1586s; samplesPerSecond = 197.7
MPI Rank 1: 07/12/2016 07:35:55:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.85844006 * 235; EvalErrorPrediction = 0.49361702 * 235; time = 0.8849s; samplesPerSecond = 265.6
MPI Rank 1: 07/12/2016 07:35:55:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.91995103 * 141; EvalErrorPrediction = 0.60992908 * 141; time = 0.4006s; samplesPerSecond = 352.0
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:    18.98 seconds since last report (12.68 seconds on comm.); 11881 samples processed by 2 workers (1812 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 0.63k samplesPerSecond , throughputPerWorker = 0.31k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:08: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00976085 * 20480; EvalErrorPrediction = 0.54946289 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=35.1852s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:36:08: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:36:08: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:36:09:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.97841215 * 945; EvalErrorPrediction = 0.53544974 * 945; time = 1.2336s; samplesPerSecond = 766.0
MPI Rank 1: 07/12/2016 07:36:10:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88888744 * 893; EvalErrorPrediction = 0.50391937 * 893; time = 1.1381s; samplesPerSecond = 784.7
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.82 seconds since last report (0.00 seconds on comm.); 4271 samples processed by 2 workers (2144 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.51k samplesPerSecond , throughputPerWorker = 0.76k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:12:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.93557894 * 902; EvalErrorPrediction = 0.53436807 * 902; time = 1.1772s; samplesPerSecond = 766.2
MPI Rank 1: 07/12/2016 07:36:13:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.92151746 * 948; EvalErrorPrediction = 0.55801688 * 948; time = 1.1782s; samplesPerSecond = 804.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.25-seconds latency this time; accumulated time on sync point = 0.25 seconds , average latency = 0.13 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     3.02 seconds since last report (0.01 seconds on comm.); 4365 samples processed by 2 workers (2186 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 1.45k samplesPerSecond , throughputPerWorker = 0.72k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:14:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.97579592 * 952; EvalErrorPrediction = 0.55357143 * 952; time = 1.4651s; samplesPerSecond = 649.8
MPI Rank 1: 07/12/2016 07:36:16:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.96706200 * 940; EvalErrorPrediction = 0.52872340 * 940; time = 1.2051s; samplesPerSecond = 780.0
MPI Rank 1: 07/12/2016 07:36:16:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 2.01210162 * 626; EvalErrorPrediction = 0.55271565 * 626; time = 0.7425s; samplesPerSecond = 843.1
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.63-seconds latency this time; accumulated time on sync point = 0.88 seconds , average latency = 0.29 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:    10.51 seconds since last report (7.51 seconds on comm.); 11844 samples processed by 2 workers (1876 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 1.13k samplesPerSecond , throughputPerWorker = 0.56k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:24: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.91079569 * 20480; EvalErrorPrediction = 0.53164062 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=16.3492s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:36:25: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:36:25: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:36:26:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.94946824 * 921; EvalErrorPrediction = 0.54505972 * 921; time = 1.3816s; samplesPerSecond = 666.6
MPI Rank 1: 07/12/2016 07:36:27:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.89460763 * 952; EvalErrorPrediction = 0.50735294 * 952; time = 1.1821s; samplesPerSecond = 805.3
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     3.02 seconds since last report (0.00 seconds on comm.); 4335 samples processed by 2 workers (2184 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.44k samplesPerSecond , throughputPerWorker = 0.72k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:29:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89813182 * 971; EvalErrorPrediction = 0.52729145 * 971; time = 1.4200s; samplesPerSecond = 683.8
MPI Rank 1: 07/12/2016 07:36:30:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.94805615 * 1027; EvalErrorPrediction = 0.54040896 * 1027; time = 1.3361s; samplesPerSecond = 768.7
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     3.14 seconds since last report (0.00 seconds on comm.); 4432 samples processed by 2 workers (2312 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 1.41k samplesPerSecond , throughputPerWorker = 0.70k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:31:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.83089966 * 961; EvalErrorPrediction = 0.52341311 * 961; time = 1.3426s; samplesPerSecond = 715.8
MPI Rank 1: 07/12/2016 07:36:33:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.92190900 * 1019; EvalErrorPrediction = 0.54857704 * 1019; time = 1.5618s; samplesPerSecond = 652.4
MPI Rank 1: 07/12/2016 07:36:34:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.79890489 * 587; EvalErrorPrediction = 0.48211244 * 587; time = 0.8414s; samplesPerSecond = 697.6
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:    10.38 seconds since last report (7.41 seconds on comm.); 11713 samples processed by 2 workers (1942 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 1.13k samplesPerSecond , throughputPerWorker = 0.56k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:41: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.88416143 * 20480; EvalErrorPrediction = 0.52421875 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=16.5441s
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:36:42: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:36:42: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/12/2016 07:36:43:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.95848870 * 969; EvalErrorPrediction = 0.51083591 * 969; time = 1.4728s; samplesPerSecond = 657.9
MPI Rank 1: 07/12/2016 07:36:45:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.91288967 * 1005; EvalErrorPrediction = 0.51641791 * 1005; time = 1.4881s; samplesPerSecond = 675.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     3.44 seconds since last report (0.01 seconds on comm.); 4404 samples processed by 2 workers (2301 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.28k samplesPerSecond , throughputPerWorker = 0.64k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:46:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.92954481 * 984; EvalErrorPrediction = 0.52743902 * 984; time = 1.2462s; samplesPerSecond = 789.6
MPI Rank 1: 07/12/2016 07:36:47:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.87361677 * 991; EvalErrorPrediction = 0.51765893 * 991; time = 1.3650s; samplesPerSecond = 726.0
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     3.17 seconds since last report (0.00 seconds on comm.); 4390 samples processed by 2 workers (2323 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 1.38k samplesPerSecond , throughputPerWorker = 0.69k samplesPerSecond
MPI Rank 1: 07/12/2016 07:36:49:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80999001 * 1004; EvalErrorPrediction = 0.50000000 * 1004; time = 1.4899s; samplesPerSecond = 673.9
MPI Rank 1: 07/12/2016 07:36:51:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.88105119 * 1002; EvalErrorPrediction = 0.53193613 * 1002; time = 2.1424s; samplesPerSecond = 467.7
MPI Rank 1: 07/12/2016 07:36:52:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.76777544 * 615; EvalErrorPrediction = 0.48617886 * 615; time = 1.2169s; samplesPerSecond = 505.4
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:    11.32 seconds since last report (7.44 seconds on comm.); 11686 samples processed by 2 workers (1946 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 1.03k samplesPerSecond , throughputPerWorker = 0.52k samplesPerSecond
MPI Rank 1: 07/12/2016 07:37:00: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.84819153 * 20480; EvalErrorPrediction = 0.50664062 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=17.9448s
MPI Rank 1: 07/12/2016 07:37:00: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:00: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 07/12/2016 07:37:00: __COMPLETED__
MPI Rank 1: ~MPIWrapper