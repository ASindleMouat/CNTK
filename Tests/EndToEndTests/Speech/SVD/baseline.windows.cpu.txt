CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 268381192 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu DeviceId=-1 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Jul 12 2016 06:56:04
		Last modified date: Fri Jul  8 10:29:45 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
		Built by svcphil on liana-08-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
07/12/2016 08:04:54: -------------------------------------------------------------------
07/12/2016 08:04:54: Build info: 

07/12/2016 08:04:54: 		Built time: Jul 12 2016 06:56:04
07/12/2016 08:04:54: 		Last modified date: Fri Jul  8 10:29:45 2016
07/12/2016 08:04:54: 		Build type: Release
07/12/2016 08:04:54: 		Build target: GPU
07/12/2016 08:04:54: 		With 1bit-SGD: no
07/12/2016 08:04:54: 		Math lib: mkl
07/12/2016 08:04:54: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
07/12/2016 08:04:54: 		CUB_PATH: C:\src\cub-1.4.1
07/12/2016 08:04:54: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
07/12/2016 08:04:54: 		Build Branch: HEAD
07/12/2016 08:04:54: 		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
07/12/2016 08:04:54: 		Built by svcphil on liana-08-w
07/12/2016 08:04:54: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
07/12/2016 08:04:54: -------------------------------------------------------------------
07/12/2016 08:04:57: -------------------------------------------------------------------
07/12/2016 08:04:57: GPU info:

07/12/2016 08:04:57: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:04:57: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:04:57: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:04:57: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:04:57: -------------------------------------------------------------------

07/12/2016 08:04:57: Running on DPHAIM-24 at 2016/07/12 08:04:57
07/12/2016 08:04:57: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu  DeviceId=-1  timestamping=true



07/12/2016 08:04:57: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/12/2016 08:04:57: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=$DeviceId$
speechTrain=[
    action=train
    makeMode=false
    modelPath=$RunDir$/models/cntkSpeech.dnn
    deviceId=$DeviceId$
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=$DataDir$/glob_0000.mlf
        labelMappingFile=$DataDir$/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=$RunDir$/models/cntkSpeech.dnn
    outputmodelPath=$RunDir$/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=$RunDir$/models/cntkSpeech.svd.dnn
    deviceId=$DeviceId$
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=$RunDir$/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu
DeviceId=-1
timestamping=true

07/12/2016 08:04:57: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/12/2016 08:04:57: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/12/2016 08:04:57: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=-1
speechTrain=[
    action=train
    makeMode=false
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn
    deviceId=-1
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf
        labelMappingFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn
    outputmodelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn
    deviceId=-1
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu
DeviceId=-1
timestamping=true

07/12/2016 08:04:57: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/12/2016 08:04:57: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: cntk.cntk:command=speechTrain:modelDecomposition:SVDTrain
configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD
configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
configparameters: cntk.cntk:deviceId=-1
configparameters: cntk.cntk:modelDecomposition=[
    action=SVD
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn
    outputmodelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]

configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu
configparameters: cntk.cntk:precision=float
configparameters: cntk.cntk:reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf
        labelMappingFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
        labelDim=132
        labelType=Category
    ]
]

configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu
configparameters: cntk.cntk:speechTrain=[
    action=train
    makeMode=false
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn
    deviceId=-1
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:SVDTrain=[
    action=train
    makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn
    deviceId=-1
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:timestamping=true
07/12/2016 08:04:57: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/12/2016 08:04:57: Commands: speechTrain modelDecomposition SVDTrain
07/12/2016 08:04:57: Precision = "float"
07/12/2016 08:04:57: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn
07/12/2016 08:04:57: CNTKCommandTrainInfo: speechTrain : 3
07/12/2016 08:04:57: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn
07/12/2016 08:04:57: CNTKCommandTrainInfo: SVDTrain : 2
07/12/2016 08:04:57: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5

07/12/2016 08:04:57: ##############################################################################
07/12/2016 08:04:57: #                                                                            #
07/12/2016 08:04:57: # Action "train"                                                             #
07/12/2016 08:04:57: #                                                                            #
07/12/2016 08:04:57: ##############################################################################

07/12/2016 08:04:57: CNTKCommandTrainBegin: speechTrain
SimpleNetworkBuilder Using CPU
reading script file glob_0000.scp ... 948 entries
total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
label set 0: 129 classes
minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames

07/12/2016 08:04:57: Creating virgin network.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *]
Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
Validating --> Prior = Mean (labels) : [132 x *] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/12/2016 08:04:57: Created model with 25 nodes on CPU.

07/12/2016 08:04:57: Training criterion node(s):
07/12/2016 08:04:57: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

07/12/2016 08:04:57: Evaluation criterion node(s):

07/12/2016 08:04:57: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
00000041930009E0: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
0000004193000B20: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
0000004193000BC0: {[W2*H1 Gradient[132 x 1 x *]] }
0000004193000C60: {[B2 Value[132 x 1]] }
0000004193000D00: {[Prior Value[132]] }
0000004193000E40: {[B2 Gradient[132 x 1]] }
0000004193000F80: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
0000004193001700: {[W2 Value[132 x 512]] }
0000004193001840: {[ScaledLogLikelihood Value[132 x 1 x *]] }
00000041930018E0: {[MVNormalizedFeatures Value[363 x *]] }
0000004193001AC0: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
0000004193001C00: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
0000004193001CA0: {[labels Value[132 x *]] }
0000004193001D40: {[EvalErrorPrediction Value[1]] }
0000004193002060: {[W0*features Value[512 x *]] }
0000004193002100: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
0000004193002240: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
0000004193002380: {[CrossEntropyWithSoftmax Value[1]] }
0000004193002420: {[LogOfPrior Value[132]] }
00000041930024C0: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
0000004193002560: {[CrossEntropyWithSoftmax Gradient[1]] }
00000041A7F7F4D0: {[InvStdOfFeatures Value[363]] }
00000041A7F7F750: {[features Value[363 x *]] }
00000041A7F7F9D0: {[B0 Value[512 x 1]] }
00000041A7F7FB10: {[W1 Value[512 x 512]] }
00000041A7F7FC50: {[B1 Value[512 x 1]] }
00000041A7F7FE30: {[MeanOfFeatures Value[363]] }
00000041A7F7FF70: {[W0 Value[512 x 363]] }


07/12/2016 08:04:57: Precomputing --> 3 PreCompute nodes found.

07/12/2016 08:04:57: 	MeanOfFeatures = Mean()
07/12/2016 08:04:57: 	InvStdOfFeatures = InvStdDev()
07/12/2016 08:04:57: 	Prior = Mean()
minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

07/12/2016 08:04:58: Precomputing --> Completed.


07/12/2016 08:04:58: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses

07/12/2016 08:04:58: Starting minibatch loop.
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[   1-  10, 3.13%]: CrossEntropyWithSoftmax = 4.57725410 * 640; EvalErrorPrediction = 0.92656250 * 640; time = 0.0734s; samplesPerSecond = 8717.0
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  11-  20, 6.25%]: CrossEntropyWithSoftmax = 4.30505180 * 640; EvalErrorPrediction = 0.91093750 * 640; time = 0.0672s; samplesPerSecond = 9525.9
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  21-  30, 9.38%]: CrossEntropyWithSoftmax = 4.07606354 * 640; EvalErrorPrediction = 0.89843750 * 640; time = 0.0672s; samplesPerSecond = 9522.0
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  31-  40, 12.50%]: CrossEntropyWithSoftmax = 3.85769806 * 640; EvalErrorPrediction = 0.84843750 * 640; time = 0.0670s; samplesPerSecond = 9555.5
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  41-  50, 15.63%]: CrossEntropyWithSoftmax = 3.77861176 * 640; EvalErrorPrediction = 0.84375000 * 640; time = 0.0679s; samplesPerSecond = 9425.6
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  51-  60, 18.75%]: CrossEntropyWithSoftmax = 3.78056183 * 640; EvalErrorPrediction = 0.83906250 * 640; time = 0.0660s; samplesPerSecond = 9696.8
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  61-  70, 21.88%]: CrossEntropyWithSoftmax = 3.57146301 * 640; EvalErrorPrediction = 0.84531250 * 640; time = 0.0659s; samplesPerSecond = 9712.6
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  71-  80, 25.00%]: CrossEntropyWithSoftmax = 3.42301331 * 640; EvalErrorPrediction = 0.80625000 * 640; time = 0.0670s; samplesPerSecond = 9548.2
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  81-  90, 28.13%]: CrossEntropyWithSoftmax = 3.35884094 * 640; EvalErrorPrediction = 0.77968750 * 640; time = 0.0664s; samplesPerSecond = 9631.7
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[  91- 100, 31.25%]: CrossEntropyWithSoftmax = 3.34276428 * 640; EvalErrorPrediction = 0.78593750 * 640; time = 0.0672s; samplesPerSecond = 9530.2
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[ 101- 110, 34.38%]: CrossEntropyWithSoftmax = 3.14580994 * 640; EvalErrorPrediction = 0.74531250 * 640; time = 0.0682s; samplesPerSecond = 9390.5
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[ 111- 120, 37.50%]: CrossEntropyWithSoftmax = 3.13475037 * 640; EvalErrorPrediction = 0.76250000 * 640; time = 0.0667s; samplesPerSecond = 9590.9
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[ 121- 130, 40.63%]: CrossEntropyWithSoftmax = 3.21369629 * 640; EvalErrorPrediction = 0.78906250 * 640; time = 0.0669s; samplesPerSecond = 9567.7
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[ 131- 140, 43.75%]: CrossEntropyWithSoftmax = 3.05670166 * 640; EvalErrorPrediction = 0.76406250 * 640; time = 0.0664s; samplesPerSecond = 9631.4
07/12/2016 08:04:59:  Epoch[ 1 of 3]-Minibatch[ 141- 150, 46.88%]: CrossEntropyWithSoftmax = 3.00557556 * 640; EvalErrorPrediction = 0.72656250 * 640; time = 0.0670s; samplesPerSecond = 9556.7
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 151- 160, 50.00%]: CrossEntropyWithSoftmax = 2.93422852 * 640; EvalErrorPrediction = 0.70625000 * 640; time = 0.0657s; samplesPerSecond = 9744.8
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 161- 170, 53.13%]: CrossEntropyWithSoftmax = 2.91940918 * 640; EvalErrorPrediction = 0.71718750 * 640; time = 0.0674s; samplesPerSecond = 9499.1
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 171- 180, 56.25%]: CrossEntropyWithSoftmax = 2.72055054 * 640; EvalErrorPrediction = 0.69218750 * 640; time = 0.0656s; samplesPerSecond = 9759.7
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 181- 190, 59.38%]: CrossEntropyWithSoftmax = 2.81221313 * 640; EvalErrorPrediction = 0.69687500 * 640; time = 0.0664s; samplesPerSecond = 9632.0
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 191- 200, 62.50%]: CrossEntropyWithSoftmax = 2.68690186 * 640; EvalErrorPrediction = 0.65781250 * 640; time = 0.0665s; samplesPerSecond = 9622.2
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 201- 210, 65.63%]: CrossEntropyWithSoftmax = 2.75170898 * 640; EvalErrorPrediction = 0.70000000 * 640; time = 0.0668s; samplesPerSecond = 9582.8
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 211- 220, 68.75%]: CrossEntropyWithSoftmax = 2.64328613 * 640; EvalErrorPrediction = 0.69062500 * 640; time = 0.0670s; samplesPerSecond = 9554.8
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 221- 230, 71.88%]: CrossEntropyWithSoftmax = 2.55494995 * 640; EvalErrorPrediction = 0.66406250 * 640; time = 0.0671s; samplesPerSecond = 9541.4
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 231- 240, 75.00%]: CrossEntropyWithSoftmax = 2.32334595 * 640; EvalErrorPrediction = 0.61406250 * 640; time = 0.0671s; samplesPerSecond = 9544.1
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 241- 250, 78.13%]: CrossEntropyWithSoftmax = 2.35762939 * 640; EvalErrorPrediction = 0.62187500 * 640; time = 0.0670s; samplesPerSecond = 9557.1
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 251- 260, 81.25%]: CrossEntropyWithSoftmax = 2.36550903 * 640; EvalErrorPrediction = 0.62031250 * 640; time = 0.0670s; samplesPerSecond = 9554.1
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 261- 270, 84.38%]: CrossEntropyWithSoftmax = 2.52148438 * 640; EvalErrorPrediction = 0.64843750 * 640; time = 0.0672s; samplesPerSecond = 9523.1
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 271- 280, 87.50%]: CrossEntropyWithSoftmax = 2.31035767 * 640; EvalErrorPrediction = 0.62968750 * 640; time = 0.0663s; samplesPerSecond = 9651.3
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 281- 290, 90.63%]: CrossEntropyWithSoftmax = 2.19385986 * 640; EvalErrorPrediction = 0.61562500 * 640; time = 0.0678s; samplesPerSecond = 9442.0
07/12/2016 08:05:00:  Epoch[ 1 of 3]-Minibatch[ 291- 300, 93.75%]: CrossEntropyWithSoftmax = 2.23048706 * 640; EvalErrorPrediction = 0.61250000 * 640; time = 0.0663s; samplesPerSecond = 9657.6
07/12/2016 08:05:01:  Epoch[ 1 of 3]-Minibatch[ 301- 310, 96.88%]: CrossEntropyWithSoftmax = 2.26915894 * 640; EvalErrorPrediction = 0.61093750 * 640; time = 0.0661s; samplesPerSecond = 9680.8
07/12/2016 08:05:01:  Epoch[ 1 of 3]-Minibatch[ 311- 320, 100.00%]: CrossEntropyWithSoftmax = 2.24404297 * 640; EvalErrorPrediction = 0.58125000 * 640; time = 0.0652s; samplesPerSecond = 9813.1
07/12/2016 08:05:01: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 3.01459312 * 20480; EvalErrorPrediction = 0.72973633 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=2.14482s
07/12/2016 08:05:01: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn.1'

07/12/2016 08:05:01: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

07/12/2016 08:05:01: Starting minibatch loop.
07/12/2016 08:05:01:  Epoch[ 2 of 3]-Minibatch[   1-  10, 12.50%]: CrossEntropyWithSoftmax = 2.07707996 * 2560; EvalErrorPrediction = 0.56445313 * 2560; time = 0.1937s; samplesPerSecond = 13219.0
07/12/2016 08:05:01:  Epoch[ 2 of 3]-Minibatch[  11-  20, 25.00%]: CrossEntropyWithSoftmax = 1.97510128 * 2560; EvalErrorPrediction = 0.53750000 * 2560; time = 0.1797s; samplesPerSecond = 14242.3
07/12/2016 08:05:01:  Epoch[ 2 of 3]-Minibatch[  21-  30, 37.50%]: CrossEntropyWithSoftmax = 2.00762520 * 2560; EvalErrorPrediction = 0.54335937 * 2560; time = 0.1800s; samplesPerSecond = 14218.4
07/12/2016 08:05:01:  Epoch[ 2 of 3]-Minibatch[  31-  40, 50.00%]: CrossEntropyWithSoftmax = 2.01824074 * 2560; EvalErrorPrediction = 0.54765625 * 2560; time = 0.1789s; samplesPerSecond = 14306.4
07/12/2016 08:05:02:  Epoch[ 2 of 3]-Minibatch[  41-  50, 62.50%]: CrossEntropyWithSoftmax = 1.95070496 * 2560; EvalErrorPrediction = 0.54023438 * 2560; time = 0.1789s; samplesPerSecond = 14313.3
07/12/2016 08:05:02:  Epoch[ 2 of 3]-Minibatch[  51-  60, 75.00%]: CrossEntropyWithSoftmax = 1.97639236 * 2560; EvalErrorPrediction = 0.53242188 * 2560; time = 0.1778s; samplesPerSecond = 14394.4
07/12/2016 08:05:02:  Epoch[ 2 of 3]-Minibatch[  61-  70, 87.50%]: CrossEntropyWithSoftmax = 1.93993301 * 2560; EvalErrorPrediction = 0.54296875 * 2560; time = 0.1775s; samplesPerSecond = 14420.5
07/12/2016 08:05:02:  Epoch[ 2 of 3]-Minibatch[  71-  80, 100.00%]: CrossEntropyWithSoftmax = 1.92681274 * 2560; EvalErrorPrediction = 0.52421875 * 2560; time = 0.1751s; samplesPerSecond = 14622.6
07/12/2016 08:05:02: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 1.98398628 * 20480; EvalErrorPrediction = 0.54160156 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=1.4432s
07/12/2016 08:05:02: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn.2'

07/12/2016 08:05:02: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 1, with 1 datapasses

07/12/2016 08:05:02: Starting minibatch loop.
07/12/2016 08:05:03:  Epoch[ 3 of 3]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.90739441 * 10240; EvalErrorPrediction = 0.53203125 * 10240; time = 0.6452s; samplesPerSecond = 15870.3
07/12/2016 08:05:03:  Epoch[ 3 of 3]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.88912888 * 10240; EvalErrorPrediction = 0.52587891 * 10240; time = 0.5791s; samplesPerSecond = 17683.9
07/12/2016 08:05:03: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 1.89826164 * 20480; EvalErrorPrediction = 0.52895508 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=1.23185s
07/12/2016 08:05:04: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.dnn'
07/12/2016 08:05:04: CNTKCommandTrainEnd: speechTrain

07/12/2016 08:05:04: Action "train" complete.


07/12/2016 08:05:04: ##############################################################################
07/12/2016 08:05:04: #                                                                            #
07/12/2016 08:05:04: # Action "SVD"                                                               #
07/12/2016 08:05:04: #                                                                            #
07/12/2016 08:05:04: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

--------------------------------------------------------------------------------------------
ParameterSVD: start to process group 0 with KeepRatio=0.50
--------------------------------------------------------------------------------------------
Performing SVD for a   512-by-363   matrix (node name: W0                  ) ---  computation time  0.12 secs ;  keep 50.0% energy ===> keep   104 svd values (reduce to 49.0% parameters) 
Performing SVD for a   512-by-512   matrix (node name: W1                  ) ---  computation time  0.20 secs ;  keep 50.0% energy ===> keep   128 svd values (reduce to 50.0% parameters) 
Performing SVD for a   132-by-512   matrix (node name: W2                  ) ---  computation time  0.02 secs ;  keep 50.0% energy ===> keep    32 svd values (reduce to 30.5% parameters) 

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *1] -> [104 x *1]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *1] -> [128 x 1 x *1]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *1] -> [32 x 1 x *1]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.


07/12/2016 08:05:04: Action "SVD" complete.


07/12/2016 08:05:04: ##############################################################################
07/12/2016 08:05:04: #                                                                            #
07/12/2016 08:05:04: # Action "train"                                                             #
07/12/2016 08:05:04: #                                                                            #
07/12/2016 08:05:04: ##############################################################################

07/12/2016 08:05:04: CNTKCommandTrainBegin: SVDTrain
NDLBuilder Using CPU
reading script file glob_0000.scp ... 948 entries
total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
label set 0: 129 classes
minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames

07/12/2016 08:05:04: Starting from checkpoint. Loading network from 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn.0'.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *3]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *3]
Validating --> MeanOfFeatures = Mean (features) : [363 x *3] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *3] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *3], [363], [363] -> [363 x *3]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *3] -> [104 x *3]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *3] -> [512 x *3]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *3] -> [128 x 1 x *3]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *3] -> [512 x 1 x *3]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *3] -> [32 x 1 x *3]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *3] -> [132 x 1 x *3]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *3], [132 x 1] -> [132 x 1 x *3]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *3] -> [132 x 1 x *3]
Validating --> Prior = Mean (labels) : [132 x *3] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *3], [132] -> [132 x 1 x *3]

Validating network. 20 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/12/2016 08:05:04: Loaded model with 31 nodes on CPU.

07/12/2016 08:05:04: Training criterion node(s):
07/12/2016 08:05:04: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

07/12/2016 08:05:04: Evaluation criterion node(s):

07/12/2016 08:05:04: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *3]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *3]] [PosteriorProb Value[132 x 1 x *3]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *3]] [features Gradient[363 x *3]] [labels Gradient[132 x *3]] }
00000041A7F7F750: {[B0 Value[512 x 1]] }
00000041A7F7F890: {[features Value[363 x *3]] }
00000041A7F7F9D0: {[InvStdOfFeatures Value[363]] }
00000041A7F7FA70: {[labels Value[132 x *3]] }
00000041A7F7FB10: {[B2 Value[132 x 1]] }
00000041A7F7FED0: {[B1 Value[512 x 1]] }
00000041A8100550: {[W0_U Value[512 x 104]] }
00000041A81005F0: {[MeanOfFeatures Value[363]] }
00000041A8100730: {[W0_V Value[104 x 363]] }
00000041A8100EB0: {[W1_U Value[512 x 128]] }
00000041A8101090: {[W1_V Value[128 x 512]] }
00000041A8101130: {[Prior Value[132]] }
00000041A84CCD60: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *3]] [H2 Value[512 x 1 x *3]] [W1_SVD Gradient[512 x 1 x *3]] }
00000041A84CCE00: {[W2_V Value[32 x 512]] }
00000041A84CCEA0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *3]] [W2_SVD Gradient[132 x 1 x *3]] }
00000041A84CD080: {[W0*features Gradient[104 x *3]] [W0*features+B0 Gradient[512 x 1 x *3]] [W1*H1 Value[128 x 1 x *3]] }
00000041A84CD120: {[B2 Gradient[132 x 1]] }
00000041A84CD440: {[CrossEntropyWithSoftmax Value[1]] }
00000041A84CD4E0: {[LogOfPrior Value[132]] }
00000041A84CD580: {[W0*features Value[104 x *3]] }
00000041A84CD620: {[W2_U Value[132 x 32]] }
00000041A84CD760: {[W1_SVD Value[512 x 1 x *3]] [W1_V Gradient[128 x 512]] }
00000041A84CD800: {[W2_SVD Value[132 x 1 x *3]] [W2_V Gradient[32 x 512]] }
00000041A84CD940: {[CrossEntropyWithSoftmax Gradient[1]] }
00000041A84CD9E0: {[W1*H1+B1 Value[512 x 1 x *3]] [W1_U Gradient[512 x 128]] }
00000041A84CDA80: {[HLast Gradient[132 x 1 x *3]] [W2*H1 Gradient[32 x 1 x *3]] }
00000041A84CDE40: {[EvalErrorPrediction Value[1]] }
00000041A84CDEE0: {[MVNormalizedFeatures Value[363 x *3]] }
00000041A84CDF80: {[W0*features+B0 Value[512 x 1 x *3]] [W0_U Gradient[512 x 104]] }
00000041A84CE020: {[W0_SVD Value[512 x *3]] [W0_V Gradient[104 x 363]] }
00000041A84CE0C0: {[H1 Value[512 x 1 x *3]] [W0_SVD Gradient[512 x *3]] }
00000041A84CE700: {[W1*H1 Gradient[128 x 1 x *3]] [W1*H1+B1 Gradient[512 x 1 x *3]] [W2*H1 Value[32 x 1 x *3]] }
00000041A84CE7A0: {[HLast Value[132 x 1 x *3]] [W2_U Gradient[132 x 32]] }
00000041A84CE980: {[ScaledLogLikelihood Value[132 x 1 x *3]] }

07/12/2016 08:05:04: No PreCompute nodes found, skipping PreCompute step.

07/12/2016 08:05:04: Starting Epoch 1: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

07/12/2016 08:05:05: Starting minibatch loop.
07/12/2016 08:05:05:  Epoch[ 1 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.90289707 * 10240; EvalErrorPrediction = 0.52226562 * 10240; time = 0.5396s; samplesPerSecond = 18978.1
07/12/2016 08:05:06:  Epoch[ 1 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.84600353 * 10240; EvalErrorPrediction = 0.51689453 * 10240; time = 0.5165s; samplesPerSecond = 19827.1
07/12/2016 08:05:06: Finished Epoch[ 1 of 2]: [Training] CrossEntropyWithSoftmax = 1.87445030 * 20480; EvalErrorPrediction = 0.51958008 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 9.7656251e-005; epochTime=1.21865s
07/12/2016 08:05:06: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn.1'

07/12/2016 08:05:06: Starting Epoch 2: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

07/12/2016 08:05:06: Starting minibatch loop.
07/12/2016 08:05:06:  Epoch[ 2 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.84538860 * 10240; EvalErrorPrediction = 0.51953125 * 10240; time = 0.5319s; samplesPerSecond = 19250.7
07/12/2016 08:05:07:  Epoch[ 2 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.84925900 * 10240; EvalErrorPrediction = 0.51152344 * 10240; time = 0.5300s; samplesPerSecond = 19321.6
07/12/2016 08:05:07: Finished Epoch[ 2 of 2]: [Training] CrossEntropyWithSoftmax = 1.84732380 * 20480; EvalErrorPrediction = 0.51552734 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 9.7656251e-005; epochTime=1.06705s
07/12/2016 08:05:07: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_cpu/models/cntkSpeech.svd.dnn'
07/12/2016 08:05:07: CNTKCommandTrainEnd: SVDTrain

07/12/2016 08:05:07: Action "train" complete.

07/12/2016 08:05:07: __COMPLETED__