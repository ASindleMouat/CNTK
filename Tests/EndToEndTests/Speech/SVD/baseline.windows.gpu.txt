CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 268381192 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu DeviceId=0 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Jul 12 2016 06:56:04
		Last modified date: Fri Jul  8 10:29:45 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
		Built by svcphil on liana-08-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
07/12/2016 08:05:10: -------------------------------------------------------------------
07/12/2016 08:05:10: Build info: 

07/12/2016 08:05:10: 		Built time: Jul 12 2016 06:56:04
07/12/2016 08:05:10: 		Last modified date: Fri Jul  8 10:29:45 2016
07/12/2016 08:05:10: 		Build type: Release
07/12/2016 08:05:10: 		Build target: GPU
07/12/2016 08:05:10: 		With 1bit-SGD: no
07/12/2016 08:05:10: 		Math lib: mkl
07/12/2016 08:05:10: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
07/12/2016 08:05:10: 		CUB_PATH: C:\src\cub-1.4.1
07/12/2016 08:05:10: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
07/12/2016 08:05:10: 		Build Branch: HEAD
07/12/2016 08:05:10: 		Build SHA1: 906792b54561dcf6226f205d6edea86e04842f47
07/12/2016 08:05:10: 		Built by svcphil on liana-08-w
07/12/2016 08:05:10: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
07/12/2016 08:05:10: -------------------------------------------------------------------
07/12/2016 08:05:11: -------------------------------------------------------------------
07/12/2016 08:05:11: GPU info:

07/12/2016 08:05:11: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:05:11: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:05:11: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:05:11: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
07/12/2016 08:05:11: -------------------------------------------------------------------

07/12/2016 08:05:11: Running on DPHAIM-24 at 2016/07/12 08:05:11
07/12/2016 08:05:11: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu  DeviceId=0  timestamping=true



07/12/2016 08:05:11: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/12/2016 08:05:11: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=$DeviceId$
speechTrain=[
    action=train
    makeMode=false
    modelPath=$RunDir$/models/cntkSpeech.dnn
    deviceId=$DeviceId$
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=$DataDir$/glob_0000.mlf
        labelMappingFile=$DataDir$/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=$RunDir$/models/cntkSpeech.dnn
    outputmodelPath=$RunDir$/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=$RunDir$/models/cntkSpeech.svd.dnn
    deviceId=$DeviceId$
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=$RunDir$/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu
DeviceId=0
timestamping=true

07/12/2016 08:05:11: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/12/2016 08:05:11: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/12/2016 08:05:11: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=0
speechTrain=[
    action=train
    makeMode=false
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn
    deviceId=0
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf
        labelMappingFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn
    outputmodelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
    deviceId=0
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu
DeviceId=0
timestamping=true

07/12/2016 08:05:11: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/12/2016 08:05:11: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: cntk.cntk:command=speechTrain:modelDecomposition:SVDTrain
configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\SVD
configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
configparameters: cntk.cntk:deviceId=0
configparameters: cntk.cntk:modelDecomposition=[
    action=SVD
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn
    outputmodelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]

configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu
configparameters: cntk.cntk:precision=float
configparameters: cntk.cntk:reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf
        labelMappingFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
        labelDim=132
        labelType=Category
    ]
]

configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu
configparameters: cntk.cntk:speechTrain=[
    action=train
    makeMode=false
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn
    deviceId=0
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:SVDTrain=[
    action=train
    makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
    deviceId=0
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:timestamping=true
07/12/2016 08:05:11: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/12/2016 08:05:11: Commands: speechTrain modelDecomposition SVDTrain
07/12/2016 08:05:11: Precision = "float"
07/12/2016 08:05:11: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn
07/12/2016 08:05:11: CNTKCommandTrainInfo: speechTrain : 3
07/12/2016 08:05:11: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
07/12/2016 08:05:11: CNTKCommandTrainInfo: SVDTrain : 2
07/12/2016 08:05:11: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5

07/12/2016 08:05:11: ##############################################################################
07/12/2016 08:05:11: #                                                                            #
07/12/2016 08:05:11: # Action "train"                                                             #
07/12/2016 08:05:11: #                                                                            #
07/12/2016 08:05:11: ##############################################################################

07/12/2016 08:05:11: CNTKCommandTrainBegin: speechTrain
SimpleNetworkBuilder Using GPU 0
reading script file glob_0000.scp ... 948 entries
total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
label set 0: 129 classes
minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames

07/12/2016 08:05:12: Creating virgin network.
Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *]
Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
Validating --> Prior = Mean (labels) : [132 x *] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/12/2016 08:05:12: Created model with 25 nodes on GPU 0.

07/12/2016 08:05:12: Training criterion node(s):
07/12/2016 08:05:12: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

07/12/2016 08:05:12: Evaluation criterion node(s):

07/12/2016 08:05:12: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
000000CDE873CC00: {[features Value[363 x *]] }
000000CDFC01FBD0: {[CrossEntropyWithSoftmax Value[1]] }
000000CDFC01FDB0: {[W0*features Value[512 x *]] }
000000CDFC01FEF0: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
000000CDFC020170: {[labels Value[132 x *]] }
000000CDFC0202B0: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
000000CDFC0207B0: {[MVNormalizedFeatures Value[363 x *]] }
000000CDFC020850: {[B2 Value[132 x 1]] }
000000CDFC020990: {[EvalErrorPrediction Value[1]] }
000000CDFC020A30: {[LogOfPrior Value[132]] }
000000CDFC020AD0: {[Prior Value[132]] }
000000CDFC020B70: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
000000CDFC020E90: {[CrossEntropyWithSoftmax Gradient[1]] }
000000CDFC020F30: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
000000CDFC020FD0: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
000000CDFC021070: {[W2*H1 Gradient[132 x 1 x *]] }
000000CDFC021390: {[ScaledLogLikelihood Value[132 x 1 x *]] }
000000CDFC021430: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
000000CDFC021610: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
000000CDFC021750: {[B2 Gradient[132 x 1]] }
000000CDFC021930: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
000000CDFEF30D90: {[B0 Value[512 x 1]] }
000000CDFEF30ED0: {[MeanOfFeatures Value[363]] }
000000CDFEF31510: {[W1 Value[512 x 512]] }
000000CDFEF315B0: {[B1 Value[512 x 1]] }
000000CDFEF31830: {[W2 Value[132 x 512]] }
000000CDFEF31DD0: {[InvStdOfFeatures Value[363]] }
000000CDFEF322D0: {[W0 Value[512 x 363]] }


07/12/2016 08:05:12: Precomputing --> 3 PreCompute nodes found.

07/12/2016 08:05:12: 	MeanOfFeatures = Mean()
07/12/2016 08:05:12: 	InvStdOfFeatures = InvStdDev()
07/12/2016 08:05:12: 	Prior = Mean()
minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

07/12/2016 08:05:15: Precomputing --> Completed.


07/12/2016 08:05:15: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses

07/12/2016 08:05:15: Starting minibatch loop.
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[   1-  10, 3.13%]: CrossEntropyWithSoftmax = 4.53354149 * 640; EvalErrorPrediction = 0.92656250 * 640; time = 0.0210s; samplesPerSecond = 30457.3
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  11-  20, 6.25%]: CrossEntropyWithSoftmax = 4.32546577 * 640; EvalErrorPrediction = 0.91875000 * 640; time = 0.0164s; samplesPerSecond = 38950.8
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  21-  30, 9.38%]: CrossEntropyWithSoftmax = 4.08015289 * 640; EvalErrorPrediction = 0.89062500 * 640; time = 0.0159s; samplesPerSecond = 40178.3
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  31-  40, 12.50%]: CrossEntropyWithSoftmax = 3.87883453 * 640; EvalErrorPrediction = 0.85312500 * 640; time = 0.0162s; samplesPerSecond = 39594.2
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  41-  50, 15.63%]: CrossEntropyWithSoftmax = 3.77940826 * 640; EvalErrorPrediction = 0.83281250 * 640; time = 0.0166s; samplesPerSecond = 38549.6
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  51-  60, 18.75%]: CrossEntropyWithSoftmax = 3.77790070 * 640; EvalErrorPrediction = 0.83437500 * 640; time = 0.0162s; samplesPerSecond = 39399.2
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  61-  70, 21.88%]: CrossEntropyWithSoftmax = 3.55863495 * 640; EvalErrorPrediction = 0.83437500 * 640; time = 0.0162s; samplesPerSecond = 39508.6
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  71-  80, 25.00%]: CrossEntropyWithSoftmax = 3.40445251 * 640; EvalErrorPrediction = 0.79375000 * 640; time = 0.0161s; samplesPerSecond = 39825.8
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  81-  90, 28.13%]: CrossEntropyWithSoftmax = 3.33721313 * 640; EvalErrorPrediction = 0.78437500 * 640; time = 0.0161s; samplesPerSecond = 39850.6
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[  91- 100, 31.25%]: CrossEntropyWithSoftmax = 3.32331543 * 640; EvalErrorPrediction = 0.79375000 * 640; time = 0.0159s; samplesPerSecond = 40279.4
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 101- 110, 34.38%]: CrossEntropyWithSoftmax = 3.13049316 * 640; EvalErrorPrediction = 0.74375000 * 640; time = 0.0160s; samplesPerSecond = 40032.5
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 111- 120, 37.50%]: CrossEntropyWithSoftmax = 3.12242126 * 640; EvalErrorPrediction = 0.76250000 * 640; time = 0.0160s; samplesPerSecond = 39955.1
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 121- 130, 40.63%]: CrossEntropyWithSoftmax = 3.21081848 * 640; EvalErrorPrediction = 0.78906250 * 640; time = 0.0159s; samplesPerSecond = 40150.6
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 131- 140, 43.75%]: CrossEntropyWithSoftmax = 3.04951172 * 640; EvalErrorPrediction = 0.75781250 * 640; time = 0.0164s; samplesPerSecond = 39064.9
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 141- 150, 46.88%]: CrossEntropyWithSoftmax = 3.01139526 * 640; EvalErrorPrediction = 0.72031250 * 640; time = 0.0160s; samplesPerSecond = 40122.9
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 151- 160, 50.00%]: CrossEntropyWithSoftmax = 2.93737183 * 640; EvalErrorPrediction = 0.69687500 * 640; time = 0.0159s; samplesPerSecond = 40150.6
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 161- 170, 53.13%]: CrossEntropyWithSoftmax = 2.92071533 * 640; EvalErrorPrediction = 0.72500000 * 640; time = 0.0159s; samplesPerSecond = 40170.7
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 171- 180, 56.25%]: CrossEntropyWithSoftmax = 2.71647949 * 640; EvalErrorPrediction = 0.69531250 * 640; time = 0.0161s; samplesPerSecond = 39729.3
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 181- 190, 59.38%]: CrossEntropyWithSoftmax = 2.80352173 * 640; EvalErrorPrediction = 0.70000000 * 640; time = 0.0160s; samplesPerSecond = 40002.5
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 191- 200, 62.50%]: CrossEntropyWithSoftmax = 2.67956543 * 640; EvalErrorPrediction = 0.64843750 * 640; time = 0.0160s; samplesPerSecond = 39945.1
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 201- 210, 65.63%]: CrossEntropyWithSoftmax = 2.73925781 * 640; EvalErrorPrediction = 0.69218750 * 640; time = 0.0161s; samplesPerSecond = 39672.7
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 211- 220, 68.75%]: CrossEntropyWithSoftmax = 2.63287354 * 640; EvalErrorPrediction = 0.68593750 * 640; time = 0.0160s; samplesPerSecond = 39887.8
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 221- 230, 71.88%]: CrossEntropyWithSoftmax = 2.55799561 * 640; EvalErrorPrediction = 0.65781250 * 640; time = 0.0161s; samplesPerSecond = 39803.5
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 231- 240, 75.00%]: CrossEntropyWithSoftmax = 2.33178101 * 640; EvalErrorPrediction = 0.61875000 * 640; time = 0.0162s; samplesPerSecond = 39552.6
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 241- 250, 78.13%]: CrossEntropyWithSoftmax = 2.35354004 * 640; EvalErrorPrediction = 0.61093750 * 640; time = 0.0163s; samplesPerSecond = 39230.1
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 251- 260, 81.25%]: CrossEntropyWithSoftmax = 2.36248169 * 640; EvalErrorPrediction = 0.61406250 * 640; time = 0.0161s; samplesPerSecond = 39731.8
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 261- 270, 84.38%]: CrossEntropyWithSoftmax = 2.51344604 * 640; EvalErrorPrediction = 0.64375000 * 640; time = 0.0160s; samplesPerSecond = 39935.1
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 271- 280, 87.50%]: CrossEntropyWithSoftmax = 2.31416626 * 640; EvalErrorPrediction = 0.63281250 * 640; time = 0.0163s; samplesPerSecond = 39328.9
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 281- 290, 90.63%]: CrossEntropyWithSoftmax = 2.18137207 * 640; EvalErrorPrediction = 0.60000000 * 640; time = 0.0163s; samplesPerSecond = 39170.1
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 291- 300, 93.75%]: CrossEntropyWithSoftmax = 2.22913208 * 640; EvalErrorPrediction = 0.60312500 * 640; time = 0.0164s; samplesPerSecond = 39143.7
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 301- 310, 96.88%]: CrossEntropyWithSoftmax = 2.26886597 * 640; EvalErrorPrediction = 0.60937500 * 640; time = 0.0163s; samplesPerSecond = 39186.9
07/12/2016 08:05:15:  Epoch[ 1 of 3]-Minibatch[ 311- 320, 100.00%]: CrossEntropyWithSoftmax = 2.23900757 * 640; EvalErrorPrediction = 0.59218750 * 640; time = 0.0163s; samplesPerSecond = 39287.9
07/12/2016 08:05:15: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 3.00953541 * 20480; EvalErrorPrediction = 0.72695312 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=0.52339s
07/12/2016 08:05:15: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn.1'

07/12/2016 08:05:15: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

07/12/2016 08:05:15: Starting minibatch loop.
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[   1-  10, 12.50%]: CrossEntropyWithSoftmax = 2.07229958 * 2560; EvalErrorPrediction = 0.56875000 * 2560; time = 0.0261s; samplesPerSecond = 98118.1
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[  11-  20, 25.00%]: CrossEntropyWithSoftmax = 1.97187347 * 2560; EvalErrorPrediction = 0.53671875 * 2560; time = 0.0199s; samplesPerSecond = 128372.3
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[  21-  30, 37.50%]: CrossEntropyWithSoftmax = 1.99638672 * 2560; EvalErrorPrediction = 0.54218750 * 2560; time = 0.0199s; samplesPerSecond = 128824.5
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[  31-  40, 50.00%]: CrossEntropyWithSoftmax = 2.01194725 * 2560; EvalErrorPrediction = 0.54296875 * 2560; time = 0.0199s; samplesPerSecond = 128378.7
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[  41-  50, 62.50%]: CrossEntropyWithSoftmax = 1.94789505 * 2560; EvalErrorPrediction = 0.53710938 * 2560; time = 0.0201s; samplesPerSecond = 127452.0
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[  51-  60, 75.00%]: CrossEntropyWithSoftmax = 1.97021103 * 2560; EvalErrorPrediction = 0.53984375 * 2560; time = 0.0200s; samplesPerSecond = 128288.6
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[  61-  70, 87.50%]: CrossEntropyWithSoftmax = 1.92982330 * 2560; EvalErrorPrediction = 0.53867188 * 2560; time = 0.0198s; samplesPerSecond = 129221.1
07/12/2016 08:05:16:  Epoch[ 2 of 3]-Minibatch[  71-  80, 100.00%]: CrossEntropyWithSoftmax = 1.92355804 * 2560; EvalErrorPrediction = 0.52968750 * 2560; time = 0.0197s; samplesPerSecond = 130200.4
07/12/2016 08:05:16: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 1.97799931 * 20480; EvalErrorPrediction = 0.54199219 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.16685s
07/12/2016 08:05:16: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn.2'

07/12/2016 08:05:16: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 1, with 1 datapasses

07/12/2016 08:05:16: Starting minibatch loop.
07/12/2016 08:05:16:  Epoch[ 3 of 3]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.89694023 * 10240; EvalErrorPrediction = 0.52744141 * 10240; time = 0.0508s; samplesPerSecond = 201531.2
07/12/2016 08:05:16:  Epoch[ 3 of 3]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.88115768 * 10240; EvalErrorPrediction = 0.52724609 * 10240; time = 0.0383s; samplesPerSecond = 267077.0
07/12/2016 08:05:16: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 1.88904896 * 20480; EvalErrorPrediction = 0.52734375 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=0.093179s
07/12/2016 08:05:16: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.dnn'
07/12/2016 08:05:16: CNTKCommandTrainEnd: speechTrain

07/12/2016 08:05:16: Action "train" complete.


07/12/2016 08:05:16: ##############################################################################
07/12/2016 08:05:16: #                                                                            #
07/12/2016 08:05:16: # Action "SVD"                                                               #
07/12/2016 08:05:16: #                                                                            #
07/12/2016 08:05:16: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

--------------------------------------------------------------------------------------------
ParameterSVD: start to process group 0 with KeepRatio=0.50
--------------------------------------------------------------------------------------------
Performing SVD for a   512-by-363   matrix (node name: W0                  ) ---  computation time  0.12 secs ;  keep 50.0% energy ===> keep   104 svd values (reduce to 49.0% parameters) 
Performing SVD for a   512-by-512   matrix (node name: W1                  ) ---  computation time  0.20 secs ;  keep 50.0% energy ===> keep   128 svd values (reduce to 50.0% parameters) 
Performing SVD for a   132-by-512   matrix (node name: W2                  ) ---  computation time  0.02 secs ;  keep 50.0% energy ===> keep    32 svd values (reduce to 30.5% parameters) 

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *1] -> [104 x *1]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *1] -> [128 x 1 x *1]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *1] -> [32 x 1 x *1]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.


07/12/2016 08:05:16: Action "SVD" complete.


07/12/2016 08:05:16: ##############################################################################
07/12/2016 08:05:16: #                                                                            #
07/12/2016 08:05:16: # Action "train"                                                             #
07/12/2016 08:05:16: #                                                                            #
07/12/2016 08:05:16: ##############################################################################

07/12/2016 08:05:16: CNTKCommandTrainBegin: SVDTrain
NDLBuilder Using GPU 0
reading script file glob_0000.scp ... 948 entries
total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
label set 0: 129 classes
minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames

07/12/2016 08:05:17: Starting from checkpoint. Loading network from 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0'.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *3]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *3]
Validating --> MeanOfFeatures = Mean (features) : [363 x *3] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *3] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *3], [363], [363] -> [363 x *3]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *3] -> [104 x *3]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *3] -> [512 x *3]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *3] -> [128 x 1 x *3]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *3] -> [512 x 1 x *3]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *3] -> [32 x 1 x *3]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *3] -> [132 x 1 x *3]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *3], [132 x 1] -> [132 x 1 x *3]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *3] -> [132 x 1 x *3]
Validating --> Prior = Mean (labels) : [132 x *3] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *3], [132] -> [132 x 1 x *3]

Validating network. 20 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/12/2016 08:05:17: Loaded model with 31 nodes on GPU 0.

07/12/2016 08:05:17: Training criterion node(s):
07/12/2016 08:05:17: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

07/12/2016 08:05:17: Evaluation criterion node(s):

07/12/2016 08:05:17: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *3]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *3]] [PosteriorProb Value[132 x 1 x *3]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *3]] [features Gradient[363 x *3]] [labels Gradient[132 x *3]] }
000000CD9BF901E0: {[W0*features Gradient[104 x *3]] [W0*features+B0 Gradient[512 x 1 x *3]] [W1*H1 Value[128 x 1 x *3]] }
000000CD9BF90460: {[CrossEntropyWithSoftmax Value[1]] }
000000CD9BF90500: {[HLast Gradient[132 x 1 x *3]] [W2*H1 Gradient[32 x 1 x *3]] }
000000CD9BF90640: {[MVNormalizedFeatures Value[363 x *3]] }
000000CD9BF906E0: {[CrossEntropyWithSoftmax Gradient[1]] }
000000CD9BF90780: {[W0*features Value[104 x *3]] }
000000CD9BF90A00: {[W0*features+B0 Value[512 x 1 x *3]] [W0_U Gradient[512 x 104]] }
000000CD9BF90AA0: {[EvalErrorPrediction Value[1]] }
000000CD9BF90B40: {[W1*H1 Gradient[128 x 1 x *3]] [W1*H1+B1 Gradient[512 x 1 x *3]] [W2*H1 Value[32 x 1 x *3]] }
000000CD9BF910E0: {[LogOfPrior Value[132]] }
000000CD9BF912C0: {[W2_SVD Value[132 x 1 x *3]] [W2_V Gradient[32 x 512]] }
000000CD9BF91400: {[HLast Value[132 x 1 x *3]] [W2_U Gradient[132 x 32]] }
000000CD9BF915E0: {[W0_SVD Value[512 x *3]] [W0_V Gradient[104 x 363]] }
000000CD9BF91680: {[H1 Value[512 x 1 x *3]] [W0_SVD Gradient[512 x *3]] }
000000CD9BF91720: {[W1_SVD Value[512 x 1 x *3]] [W1_V Gradient[128 x 512]] }
000000CD9BF917C0: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *3]] [H2 Value[512 x 1 x *3]] [W1_SVD Gradient[512 x 1 x *3]] }
000000CD9BF91A40: {[ScaledLogLikelihood Value[132 x 1 x *3]] }
000000CD9BF91AE0: {[B2 Gradient[132 x 1]] }
000000CD9BF91B80: {[W1*H1+B1 Value[512 x 1 x *3]] [W1_U Gradient[512 x 128]] }
000000CD9BF91E00: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *3]] [W2_SVD Gradient[132 x 1 x *3]] }
000000CDFBBBA4B0: {[features Value[363 x *3]] }
000000CDFBBBA730: {[B1 Value[512 x 1]] }
000000CDFBBBA7D0: {[B2 Value[132 x 1]] }
000000CDFBBBAB90: {[Prior Value[132]] }
000000CDFBBBAEB0: {[MeanOfFeatures Value[363]] }
000000CDFBBBAFF0: {[InvStdOfFeatures Value[363]] }
000000CDFBBBB6D0: {[B0 Value[512 x 1]] }
000000CDFBBBBDB0: {[labels Value[132 x *3]] }
000000CDFEF30ED0: {[W0_U Value[512 x 104]] }
000000CDFEF30F70: {[W0_V Value[104 x 363]] }
000000CDFEF316F0: {[W1_V Value[128 x 512]] }
000000CDFEF31A10: {[W2_U Value[132 x 32]] }
000000CDFEF31D30: {[W1_U Value[512 x 128]] }
000000CDFEF31F10: {[W2_V Value[32 x 512]] }

07/12/2016 08:05:17: No PreCompute nodes found, skipping PreCompute step.

07/12/2016 08:05:17: Starting Epoch 1: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

07/12/2016 08:05:17: Starting minibatch loop.
07/12/2016 08:05:17:  Epoch[ 1 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.89463825 * 10240; EvalErrorPrediction = 0.52001953 * 10240; time = 0.0564s; samplesPerSecond = 181409.1
07/12/2016 08:05:17:  Epoch[ 1 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.83774509 * 10240; EvalErrorPrediction = 0.51533203 * 10240; time = 0.0413s; samplesPerSecond = 248176.2
07/12/2016 08:05:17: Finished Epoch[ 1 of 2]: [Training] CrossEntropyWithSoftmax = 1.86619167 * 20480; EvalErrorPrediction = 0.51767578 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 9.7656251e-005; epochTime=0.277402s
07/12/2016 08:05:17: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.1'

07/12/2016 08:05:17: Starting Epoch 2: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

07/12/2016 08:05:17: Starting minibatch loop.
07/12/2016 08:05:17:  Epoch[ 2 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.83527489 * 10240; EvalErrorPrediction = 0.51796875 * 10240; time = 0.0444s; samplesPerSecond = 230412.7
07/12/2016 08:05:17:  Epoch[ 2 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.84130554 * 10240; EvalErrorPrediction = 0.51230469 * 10240; time = 0.0413s; samplesPerSecond = 247791.9
07/12/2016 08:05:17: Finished Epoch[ 2 of 2]: [Training] CrossEntropyWithSoftmax = 1.83829021 * 20480; EvalErrorPrediction = 0.51513672 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 9.7656251e-005; epochTime=0.090719s
07/12/2016 08:05:17: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160712075937.954252\Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn'
07/12/2016 08:05:17: CNTKCommandTrainEnd: SVDTrain

07/12/2016 08:05:17: Action "train" complete.

07/12/2016 08:05:17: __COMPLETED__